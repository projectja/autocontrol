import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxFontAwesomeComponent {
    constructor() {
        this.classes = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * getClasses()
     * Function will return Options in class form
     * @return {?}
     */
    getClasses() {
        (this.size) ? this.classes += `fa-${this.size} ` : '';
        (this.rotate) ? this.classes += `fa-rotate-${this.rotate} ` : '';
        (this.flip) ? this.classes += `fa-flip-${this.flip} ` : '';
        (this.customClass) ? this.classes += `${this.customClass} ` : '';
        return this.classes;
    }
}
NgxFontAwesomeComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-fa',
                template: `
    <i class="fa fa-{{ name }}"
      [ngClass]="getClasses()"
      [class.fa-fw]="fixed"
      [class.fa-border]="border"
      [class.fa-spin]="animation"
      aria-hidden="true">
    </i>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
NgxFontAwesomeComponent.ctorParameters = () => [];
NgxFontAwesomeComponent.propDecorators = {
    name: [{ type: Input }],
    size: [{ type: Input }],
    animation: [{ type: Input }],
    rotate: [{ type: Input }],
    flip: [{ type: Input }],
    fixed: [{ type: Input }],
    border: [{ type: Input }],
    customClass: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.name;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.size;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.animation;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.rotate;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.flip;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.fixed;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.border;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.customClass;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.classes;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxFontAwesomeModule {
}
NgxFontAwesomeModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgxFontAwesomeComponent],
                imports: [
                    CommonModule
                ],
                exports: [NgxFontAwesomeComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxFontAwesomeModule, NgxFontAwesomeComponent as Éµa };
//# sourceMappingURL=ngx-font-awesome.js.map
