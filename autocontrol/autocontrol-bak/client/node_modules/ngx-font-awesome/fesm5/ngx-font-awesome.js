import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxFontAwesomeComponent = /** @class */ (function () {
    function NgxFontAwesomeComponent() {
        this.classes = '';
    }
    /**
     * @return {?}
     */
    NgxFontAwesomeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * getClasses()
     * Function will return Options in class form
     */
    /**
     * getClasses()
     * Function will return Options in class form
     * @return {?}
     */
    NgxFontAwesomeComponent.prototype.getClasses = /**
     * getClasses()
     * Function will return Options in class form
     * @return {?}
     */
    function () {
        (this.size) ? this.classes += "fa-" + this.size + " " : '';
        (this.rotate) ? this.classes += "fa-rotate-" + this.rotate + " " : '';
        (this.flip) ? this.classes += "fa-flip-" + this.flip + " " : '';
        (this.customClass) ? this.classes += this.customClass + " " : '';
        return this.classes;
    };
    NgxFontAwesomeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-fa',
                    template: "\n    <i class=\"fa fa-{{ name }}\"\n      [ngClass]=\"getClasses()\"\n      [class.fa-fw]=\"fixed\"\n      [class.fa-border]=\"border\"\n      [class.fa-spin]=\"animation\"\n      aria-hidden=\"true\">\n    </i>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    NgxFontAwesomeComponent.ctorParameters = function () { return []; };
    NgxFontAwesomeComponent.propDecorators = {
        name: [{ type: Input }],
        size: [{ type: Input }],
        animation: [{ type: Input }],
        rotate: [{ type: Input }],
        flip: [{ type: Input }],
        fixed: [{ type: Input }],
        border: [{ type: Input }],
        customClass: [{ type: Input }]
    };
    return NgxFontAwesomeComponent;
}());
if (false) {
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.name;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.size;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.animation;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.rotate;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.flip;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.fixed;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.border;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.customClass;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.classes;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxFontAwesomeModule = /** @class */ (function () {
    function NgxFontAwesomeModule() {
    }
    NgxFontAwesomeModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NgxFontAwesomeComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [NgxFontAwesomeComponent]
                },] }
    ];
    return NgxFontAwesomeModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxFontAwesomeModule, NgxFontAwesomeComponent as Éµa };
//# sourceMappingURL=ngx-font-awesome.js.map
