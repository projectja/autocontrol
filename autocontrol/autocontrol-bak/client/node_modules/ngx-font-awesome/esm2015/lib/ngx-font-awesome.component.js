/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
export class NgxFontAwesomeComponent {
    constructor() {
        this.classes = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * getClasses()
     * Function will return Options in class form
     * @return {?}
     */
    getClasses() {
        (this.size) ? this.classes += `fa-${this.size} ` : '';
        (this.rotate) ? this.classes += `fa-rotate-${this.rotate} ` : '';
        (this.flip) ? this.classes += `fa-flip-${this.flip} ` : '';
        (this.customClass) ? this.classes += `${this.customClass} ` : '';
        return this.classes;
    }
}
NgxFontAwesomeComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-fa',
                template: `
    <i class="fa fa-{{ name }}"
      [ngClass]="getClasses()"
      [class.fa-fw]="fixed"
      [class.fa-border]="border"
      [class.fa-spin]="animation"
      aria-hidden="true">
    </i>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
NgxFontAwesomeComponent.ctorParameters = () => [];
NgxFontAwesomeComponent.propDecorators = {
    name: [{ type: Input }],
    size: [{ type: Input }],
    animation: [{ type: Input }],
    rotate: [{ type: Input }],
    flip: [{ type: Input }],
    fixed: [{ type: Input }],
    border: [{ type: Input }],
    customClass: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.name;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.size;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.animation;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.rotate;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.flip;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.fixed;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.border;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.customClass;
    /** @type {?} */
    NgxFontAwesomeComponent.prototype.classes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvbnQtYXdlc29tZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9udC1hd2Vzb21lLyIsInNvdXJjZXMiOlsibGliL25neC1mb250LWF3ZXNvbWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWdCbEYsTUFBTSxPQUFPLHVCQUF1QjtJQVVsQztRQURBLFlBQU8sR0FBVyxFQUFFLENBQUM7SUFDTCxDQUFDOzs7O0lBRWpCLFFBQVE7SUFDUixDQUFDOzs7Ozs7SUFNRCxVQUFVO1FBQ1IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksTUFBTSxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN0RCxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxhQUFhLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ2pFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLFdBQVcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDM0QsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQzs7O1lBdkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO2dCQUVELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7OzttQkFFRSxLQUFLO21CQUNMLEtBQUs7d0JBQ0wsS0FBSztxQkFDTCxLQUFLO21CQUNMLEtBQUs7b0JBQ0wsS0FBSztxQkFDTCxLQUFLOzBCQUNMLEtBQUs7Ozs7SUFQTix1Q0FBc0I7O0lBQ3RCLHVDQUFzQjs7SUFDdEIsNENBQTRCOztJQUM1Qix5Q0FBd0I7O0lBQ3hCLHVDQUFzQjs7SUFDdEIsd0NBQXdCOztJQUN4Qix5Q0FBeUI7O0lBQ3pCLDhDQUE2Qjs7SUFDN0IsMENBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtZmEnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpIGNsYXNzPVwiZmEgZmEte3sgbmFtZSB9fVwiXG4gICAgICBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIlxuICAgICAgW2NsYXNzLmZhLWZ3XT1cImZpeGVkXCJcbiAgICAgIFtjbGFzcy5mYS1ib3JkZXJdPVwiYm9yZGVyXCJcbiAgICAgIFtjbGFzcy5mYS1zcGluXT1cImFuaW1hdGlvblwiXG4gICAgICBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8L2k+XG4gIGAsXG4gIHN0eWxlczogW10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE5neEZvbnRBd2Vzb21lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFuaW1hdGlvbjogYm9vbGVhbjtcbiAgQElucHV0KCkgcm90YXRlOiBudW1iZXI7XG4gIEBJbnB1dCgpIGZsaXA6IHN0cmluZztcbiAgQElucHV0KCkgZml4ZWQ6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGJvcmRlcjogYm9vbGVhbjtcbiAgQElucHV0KCkgY3VzdG9tQ2xhc3M6IHN0cmluZztcbiAgY2xhc3Nlczogc3RyaW5nID0gJyc7XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICAvKipcbiAgICogZ2V0Q2xhc3NlcygpXG4gICAqIEZ1bmN0aW9uIHdpbGwgcmV0dXJuIE9wdGlvbnMgaW4gY2xhc3MgZm9ybVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpIHtcbiAgICAodGhpcy5zaXplKSA/IHRoaXMuY2xhc3NlcyArPSBgZmEtJHt0aGlzLnNpemV9IGAgOiAnJztcbiAgICAodGhpcy5yb3RhdGUpID8gdGhpcy5jbGFzc2VzICs9IGBmYS1yb3RhdGUtJHt0aGlzLnJvdGF0ZX0gYCA6ICcnO1xuICAgICh0aGlzLmZsaXApID8gdGhpcy5jbGFzc2VzICs9IGBmYS1mbGlwLSR7dGhpcy5mbGlwfSBgIDogJyc7XG4gICAgKHRoaXMuY3VzdG9tQ2xhc3MpID8gdGhpcy5jbGFzc2VzICs9IGAke3RoaXMuY3VzdG9tQ2xhc3N9IGAgOiAnJztcbiAgICByZXR1cm4gdGhpcy5jbGFzc2VzO1xuICB9XG59XG4iXX0=