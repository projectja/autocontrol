{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.html","webpack:///src/app/components/editarea/editarea.component.ts","webpack:///src/app/components/editarea/editarea.component.html","webpack:///src/app/components/empleado-form/empleado-form.component.ts","webpack:///src/app/components/empleado-form/empleado-form.component.html","webpack:///src/app/components/empleados-list/empleados-list.component.ts","webpack:///src/app/components/empleados-list/empleados-list.component.html","webpack:///src/app/components/navigation/navigation.component.ts","webpack:///src/app/components/navigation/navigation.component.html","webpack:///src/app/models/empleados.ts","webpack:///src/app/models/tareas.ts","webpack:///src/app/services/autocontrol.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/validadores.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withComponents","declarations","providers","bootstrap","AutocontrolFormComponent","route","fb","validadores","autocontrolservice","sharedService","empleados","zonasTienda","elementosZona","tareaencurso","tareasrealizadas","displayedColumns","comp1Val","crearFormulario","cargarDataAlFormulario","crearListeners","str","updateComp1Val","getEmpleados","cargarZonas","cargarGrid","forma","group","fecha_tarea","id_empleado","id_zona","id_elementozona","nota","finalizada","get","valueChanges","subscribe","console","log","reset","invalid","Object","values","controls","forEach","control","markAsTouched","JSON","parse","stringify","value","saveTarea","res","err","error","nombre","getZonas","selectedValue","idZona","getElementosZonaPorzona","getElementosGrid","dataSource","row","event","enviar","editTarea","navigate","guardar","cargarElementosZona","EditareaComponent","activeroute","verMensaje","bulma$","pipe","mensaje","mensajecadena","setValue","tareaid","setEmpleado","empleadoSeleccionado","find","empleado","setZona","zonaSeleccionada","zona","EmpleadoFormComponent","autocontrolService","router","activedRoute","classes","edit","params","snapshot","getEmpleado","saveEmpleado","created_at","updateEmpleados","updateEmpleado","saveNewEmpleado","EmpleadosListComponent","deleteEmpleado","NavigationComponent","Empleados","Tareas","AutocontrolService","http","API_URI","_comp1ValueBS","_comp2ValueBS","asObservable","post","updatedEmpleado","put","tareas","idtask","val","next","comp2Val","ValidadoresService","reject","setTimeout","existe","toLowerCase","noHerrera","pass1Name","pass2Name","formGroup","pass1Control","pass2Control","setErrors","noEsIgual","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\r\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\r\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\r\nimport { EditareaComponent } from './components/editarea/editarea.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    // como está redireccionando a otro sitio hay que añadir pathMatch y full\r\n    path:'',\r\n    redirectTo: 'games', pathMatch: 'full'\r\n  },\r\n  {\r\n    // cuando viiste la ruta /games se randeriza el componente gamelistcomponents\r\n    path: 'games',  component: EmpleadosListComponent\r\n  },\r\n  {\r\n    path: 'games/add', component: EmpleadoFormComponent\r\n\r\n  },\r\n  {\r\n    path: 'tareas/editarea/:id', component: EditareaComponent\r\n\r\n  },\r\n  {\r\n\r\n    path: 'games/edit/:id', component: EmpleadoFormComponent\r\n\r\n  },\r\n  {\r\n    path: 'autocontrol', component: AutocontrolFormComponent\r\n\r\n  },\r\n  {\r\n    path: 'elementoszona', component: AutocontrolFormComponent\r\n\r\n  },\r\n// 18/07 agregar una opción para editar el GRID con clickl\r\n  {\r\n    path: 'elementoszona', component: AutocontrolFormComponent\r\n\r\n  },\r\n\r\n {\r\n    path: 'editareas', component: EditareaComponent\r\n\r\n  },\r\n  \r\n\r\n\r\n                                      \r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n\r\n}\r\n","<H1>Cliente de angular</H1>\r\n<app-navigation>\r\n \r\n\r\n</app-navigation>\r\n<div class=\"container p-4\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n// con esto funcionara nuestro sirivio\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\r\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\r\n\r\n// esto vale pasra decirle que esta app tendraa este proveedor\r\nimport { AutocontrolService } from './services/autocontrol.service';\r\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\nimport {  MatSelectModule } from '@angular/material/select';\r\n\r\nimport {  MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport {MatInputModule } from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\n\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { NgxFontAwesomeModule } from 'ngx-font-awesome';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\n// Modulo Tabla angular material\r\n\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { EditareaComponent } from './components/editarea/editarea.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    EmpleadoFormComponent,\r\n    EmpleadosListComponent,\r\n    AutocontrolFormComponent,\r\n    EditareaComponent\r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    BsDatepickerModule,    \r\n    BrowserAnimationsModule,\r\n    NgxFontAwesomeModule,\r\n\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule, \r\n    \r\n    BsDatepickerModule.forRoot(),\r\n    AgGridModule.withComponents([])\r\n  ],\r\n  providers: [\r\n    AutocontrolService,\r\n    MatDatepickerModule     \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","// updated e ngit 08-08 dev-branch\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ValidadoresService } from '../../services/validadores.service';\r\nimport { AutocontrolService } from '../../services/autocontrol.service';\r\nimport { Tareas } from '../../models/tareas';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { Router } from '@angular/router';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n\r\n\r\n// COMPARTIR DATOS ENTRE SIBILINGS COMPONENT\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n// FIN CONMPATIR DATOS ENTRE SIBILINGS\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-autoncontrol-form',\r\n \r\n  //template: `<app-editarea [childMessage]=\"forma\"></app-editarea>`,\r\n  templateUrl: './autocontrol-form.component.html',\r\n  styleUrls: ['./autocontrol-form.component.css']\r\n})\r\n\r\nexport class AutocontrolFormComponent implements OnInit {\r\n \r\n  \r\n\r\n\r\n  forma: FormGroup;\r\n  empleados: any = [];  \r\n  zonasTienda: any = [];\r\n  elementosZona: any = [];\r\n  tareaencurso: Tareas = new Tareas();\r\n  tareasrealizadas: any = [];\r\n  gridOptions: GridOptions;\r\n  comp1Val:string;\r\n\r\n\r\n   // Data table\r\n   dataSource: any;\r\n   displayedColumns: string[] = ['fecha', 'nombre', 'zona', 'parte', 'finalizada'];\r\n\r\n\r\n// fin prueba para error\r\n\r\n  constructor( private route:Router,private fb: FormBuilder,\r\n               private validadores: ValidadoresService,\r\n                private autocontrolservice: AutocontrolService ,\r\n                private sharedService: AutocontrolService\r\n  ) { \r\n\r\n    this.sharedService.comp1Val = \"Component 1 initial value\";\r\n\r\n\r\n  this.crearFormulario();\r\n  this.cargarDataAlFormulario();\r\n   \r\n  this.crearListeners();\r\n\r\n\r\n  }\r\n  \r\n  addValue(str) {\r\n    this.sharedService.updateComp1Val(str);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getEmpleados();\r\n    this.cargarZonas();\r\n    this.cargarGrid();    \r\n  }\r\n\r\n\r\n  crearFormulario() {\r\n\r\n    this.forma = this.fb.group({\r\n      fecha_tarea: 9,\r\n      id_empleado     : 0,\r\n      id_zona    : 0,\r\n      id_elementozona: 0,\r\n      nota: [''],\r\n      finalizada: false\r\n    }); \r\n\r\n  }\r\n\r\n\r\n  crearListeners() {\r\n    this.forma.get('id_empleado').valueChanges.subscribe( console.log );\r\n  }\r\n\r\n  cargarDataAlFormulario() {\r\n\r\n    //this.forma.setValue({\r\n    this.forma.reset({\r\n      id_empleado     : 0, \r\n      id_zona    : 0,\r\n      nota: [''],\r\n      id_elementozona: 0,      \r\n      finalizada: false\r\n    });\r\n\r\n  }\r\n\r\n  cargardataAlFormularioEdit() {\r\n\r\n    //this.forma.setValue({\r\n    this.forma.reset({\r\n      id_empleado     : 2, \r\n      id_zona    : 0,\r\n      nota: [''],\r\n      id_elementozona: 0,      \r\n      finalizada: false\r\n    });\r\n\r\n  }\r\n\r\n  guardar() {\r\n    console.log(  \"VALOR DE FORMA EN GUARDAR() \" ,this.forma );                                                                                                                                         \r\n         \r\n    if ( this.forma.invalid ) {\r\n\r\n\r\n      return Object.values( this.forma.controls ).forEach( control => {\r\n        \r\n        if ( control instanceof FormGroup ) {\r\n          Object.values( control.controls ).forEach( control => control.markAsTouched() );\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n        \r\n        \r\n      })\r\n         \r\n    }\r\n    this.tareaencurso = JSON.parse(JSON.stringify(this.forma.value))\r\n   \r\n    this.autocontrolservice.saveTarea(this.tareaencurso).subscribe(\r\n      res => {\r\n        //this.empleados = res;\r\n        console.log(\"ESTSOS SON LOS EMPLEADOS: \", res )\r\n        this.cargarGrid();\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )\r\n\r\n    // Posteo de información\r\n    this.forma.reset({\r\n      nombre: 'Sin nombre'\r\n    });\r\n\r\n  }\r\n\r\n  getEmpleados(){\r\n    this.autocontrolservice.getEmpleados().subscribe(\r\n      res => {\r\n        this.empleados = res;\r\n        console.log(res)\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )}\r\n\r\n  cargarZonas(){\r\n    this.autocontrolservice.getZonas().subscribe(\r\n      res => {\r\n        this.zonasTienda = res;\r\n        console.log(this.zonasTienda  )\r\n        \r\n        \r\n      },\r\n      err => console.error(err)\r\n  )}\r\n\r\n  cargarElementosZona(selectedValue: number){\r\n    const idZona = this.forma.get('id_zona').value\r\n    console.log('cargarELEMENTOSzonas variable idzona ',idZona)\r\n    if (idZona != null) {    \r\n      this.autocontrolservice.getElementosZonaPorzona(idZona).subscribe(\r\n        res => {\r\n          this.elementosZona = res;\r\n          console.log(this.elementosZona )\r\n        },\r\n        err => console.error(err)           \r\n      )}\r\n  }\r\n \r\n  // metodo creado para probar error\r\n  filterChanged(selectedValue:string){\r\n    console.log('value is ',selectedValue);\r\n \r\n  }\r\n\r\n  cargarGrid(){\r\n    this.autocontrolservice.getElementosGrid().subscribe(\r\n      res => {\r\n        this.tareasrealizadas = res;\r\n       \r\n        console.log(\"tareas \", this.tareasrealizadas )\r\n\r\n        this.dataSource = res\r\n      },\r\n      err => console.error(\"dea error\", err)           \r\n    )}\r\n\r\n\r\n\r\n\r\n  // Row clicked JESUS\r\n  onRowClicked(row: any, event: MouseEvent): void {\r\n    \r\n     // function que llamará quien quiera transmitir un mensaje.\r\n    this.autocontrolservice.enviar(row);\r\n   // this.addValue(this.sharedService.comp1Val)\r\n      this.autocontrolservice.editTarea(row.id).subscribe(\r\n        res => {\r\n          this.tareasrealizadas = res;\r\n         \r\n          console.log(\"tareas \", this.tareasrealizadas )\r\n  \r\n          this.dataSource = res\r\n        },\r\n        err => console.error(\"dea error\", err)           \r\n      )\r\n\r\n      console.log(\"dddddd\",row)   \r\n      \r\n\r\n        const idZona = this.forma.get('id_zona').value\r\n        console.log('cargarELEMENTOSzonas variable idzona ',idZona)\r\n        \r\n       this.route.navigate(['tareas/editarea/'+row.id]);\r\n        \r\n  }\r\n  //\r\n  // traspaso de mensajes SIBILINGS COMPONENTS  \r\n  sendMessage(): void {\r\n      // send message to subscribers via observable subject\r\n    \r\n  }\r\n\r\n  // END MESSAJES ENTRE SIBILINGS COMPONENTES\r\n  \r\n\r\n\r\n}\r\n\r\n    \r\n\r\n\r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- recuperado despues de un lio de coomit eo 09/08 -->\r\n\r\n<h4>Formularios <small> Reactivos </small></h4>\r\n<hr>\r\n<form autocomplete=\"off\" [formGroup]=\"forma\" (ngSubmit)=\"guardar()\">\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">Fecha</label>\r\n    <div class=\"col example-full-width\">\r\n        <input matInput [matDatepicker]=\"picker\" class=\"form-control\" placeholder=\"Fecha\"  formControlName=\"fecha_tarea\">\r\n        <mat-datepicker #picker></mat-datepicker>\r\n        <button mat-raised-button (click)=\"picker.open()\">Open</button>       \r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">Nombre</label>\r\n    <div class=\"col\">\r\n        <select class=\"form-control\" \r\n                placeholder=\"Nombre\"  \r\n                formControlName=\"id_empleado\">\r\n                <option id=\"nombre\"   \r\n                [value] = \"empleado.id\"\r\n                 *ngFor = \"let empleado of empleados\" \r\n                [value]=empleado.id>{{empleado.nombre}}</option>\r\n        </select>\r\n         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Zona de la tienda</label>\r\n      <div class=\"col\">\r\n        <select (change)=\"cargarElementosZona($event.target.value)\" \r\n                class=\"form-control\" \r\n                placeholder=\"Zona\"  \r\n                formControlName=\"id_zona\">\r\n               <option  *ngFor = \"let zona of zonasTienda\" [value]=zona.id>{{zona.nombre}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Qué parte concretamente</label>\r\n      <div class=\"col\">\r\n        <select  class=\"form-control\" \r\n                 placeholder=\"Zona\"  \r\n                 formControlName=\"id_elementozona\">\r\n                <option  *ngFor = \"let elemento of elementosZona\" [value]=elemento.id>{{elemento.description_obj}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row align-items-end\">\r\n      <label class=\"col-2 col-form-label\" value=\"\">Finalizada</label>\r\n      <div class=\"col\">\r\n       <label><input type=\"checkbox\" value=\"\" formControlName=\"finalizada\"></label>\r\n      </div>                                        \r\n     </div>\r\n\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">&nbsp;</label>\r\n    <div class=\"input-group col\">\r\n      <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </div>  \r\n</form>\r\n\r\n\r\n<!-- Tabla Angular material -->\r\n<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n   <!-- id Column -->\r\n   <ng-container matColumnDef=\"id\">\r\n    <mat-header-cell *matHeaderCellDef>id</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\" > \r\n      {{element?.fecha_tarea | date: 'dd/MM/yyyy'}}      \r\n   </mat-cell>\r\n      \r\n  </ng-container>  \r\n\r\n  <!-- Fecha Column -->\r\n  <ng-container matColumnDef=\"fecha\">\r\n    <mat-header-cell *matHeaderCellDef>Fecha</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element?.id}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Nombre Column -->\r\n  <ng-container matColumnDef=\"nombre\">\r\n    <mat-header-cell *matHeaderCellDef>Nombre</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element?.nombre}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Zona Column -->\r\n  <ng-container matColumnDef=\"zona\">\r\n    <mat-header-cell *matHeaderCellDef>Zona</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element?.zona}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Parte Column -->\r\n  <ng-container matColumnDef=\"parte\">\r\n    <mat-header-cell *matHeaderCellDef>Parte</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element?.parte}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Finalizada Column -->\r\n  <ng-container matColumnDef=\"finalizada\">\r\n    <mat-header-cell *matHeaderCellDef>Finalizada</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.finalizada ? 'Sí' : 'No'}} </mat-cell>\r\n  </ng-container>\r\n<!-- HACEMOS DOBLE CLICK -->\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onRowClicked(row, $event)\"></mat-row>\r\n</mat-table>\r\n\r\n<!--  SIBILINGS ENTRE COMPONENTES\r\n  SERIA EQUIVALNETE A DARLE UN BOTON EN ELEJEMPLO QUE COPIAMOS\r\n  https://stackblitz.com/edit/angular-6-communicating-between-components-1gunkw?file=app%2Fhome%2Fhome.component.html\r\n\r\n  EN NUESTRO CASO SERIA UN SENDMESSAGE AL DAR CLICK EN EL BOTON\r\n\r\n  \r\n<form autocomplete=\"off\" [formGroup]=\"forma\" (ngSubmit)=\"guardar()\">\r\n  <button  (click)=\"sendMessage()\" class=\"btn btn-primary\">Send Message</button>\r\n\r\n-->\r\n\r\n\r\n\r\n<br>\r\n<pre>\r\n  Estado del formulario {{forma.valid}}  \r\n</pre>\r\n\r\n\r\n\r\n\r\n <!-- \r\n<pre>\r\n\r\n estado del mensaje padre {{parentMessage}} \r\n</pre>\r\n<app-editarea [childMessage]=\"parentMessage\"></app-editarea> -->","import { Component, OnInit, ɵConsole,OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ValidadoresService } from '../../services/validadores.service';\r\n//import { AutocontrolService } from '../../services/autocontrol.service';\r\nimport { AutocontrolService } from '../../services/index';\r\nimport { Tareas } from '../../models/tareas';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { Router } from '@angular/router';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Input} from '@angular/core'\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-editarea',\r\n  templateUrl: './editarea.component.html',\r\n  styleUrls: ['./editarea.component.css']\r\n})\r\nexport class EditareaComponent implements OnInit, AfterViewInit {\r\n\r\n  \r\n  comp1Val: string;\r\n  comp2Val: string;\r\n\r\n  mensajecadena:any\r\n\r\n\r\n  @Input() childMessage: string;\r\n  message$: any;\r\n  subscription: Subscription;\r\n\r\n \r\n  forma: FormGroup;\r\n  \r\n  empleados: any = [];\r\n  zonasTienda: any = [];\r\n  elementosZona: any = [];\r\n  tareaencurso: Tareas = new Tareas();\r\n  tareasrealizadas: any = [];\r\n  gridOptions: GridOptions;\r\n\r\n\r\n   // Data table\r\n   dataSource: any;\r\n   displayedColumns: string[] = ['fecha', 'nombre', 'zona', 'parte', 'finalizada'];\r\n\r\n  \r\n// fin prueba para error\r\n\r\n  constructor( private route:Router,private fb: FormBuilder,\r\n              private activeroute:ActivatedRoute,\r\n               private validadores: ValidadoresService, private autocontrolservice: AutocontrolService,\r\n               private sharedService: AutocontrolService) { \r\n              \r\n    \r\n\r\n    //this.cargardataAlFormularioEdit();\r\n    this.verMensaje(); \r\n    this.crearFormulario();\r\n   \r\n     \r\n   \r\n    // this.crearListeners();\r\n \r\n  }\r\n\r\n  verMensaje() {\r\n    // take es un operador que hará que solo obtengamos el último valor\r\n    // que tiene bulma$ almacenado. Si no lo usamos, cuando enviemos un mensaje\r\n    // de cualquiera de los dos componentes, se mostrará automaticamente\r\n    // en el que ya haya visto un mensaje anteriormente.\r\n    this.autocontrolservice.bulma$.pipe(take(1)).\r\n    subscribe(mensaje => {\r\n     this.mensajecadena = mensaje\r\n    });\r\n\r\n    console.log(\"mensajecadena \",this.mensajecadena)\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.comp1Val = this.sharedService.comp1Val;\r\n  }\r\n\r\n  tareaid:number    ;\r\n  ngOnInit() {\r\n\r\n    \r\n    this.getEmpleados();\r\n    this.cargarZonas();\r\n    \r\n    // esta variacion con  respecto al crar la tarea\r\n    // aqui tenemos que ser capaces de mostrar la tarea\r\n    // que ya existía en el registro\r\n    // this.cargarGrid(); \r\n    \r\n    \r\n    //JESUS\r\n    this.forma.get(\"fecha_tarea\").setValue(this.mensajecadena.fecha_tarea)\r\n   \r\n    console.log(\"el NOMBRE ANTES DE IMPRIMIR ES \", this.tareaid) \r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //this.cargarDataAlFormulario();\r\n  }\r\n\r\n  crearFormulario() {\r\n    this.forma = this.fb.group({\r\n  //  this.forma = this.fb.group({\r\n  \r\n      fecha_tarea: 0,\r\n      id_empleado     : 0,\r\n      id_zona    : 0,\r\n      id_elementozona: 0,\r\n      nota: [''],\r\n      finalizada: false\r\n    }); \r\n    console.log (' crearFORMULARIO '+ this.mensajecadena.id)\r\n\r\n  }\r\n\r\n  crearListeners() {\r\n   // this.forma.get('id_empleado').valueChanges.subscribe( console.log );\r\n  }\r\n\r\n  cargarDataAlFormulario() {\r\n\r\n    \r\n\r\n    this.forma.setValue({\r\n      id_empleado     : 0,\r\n      fecha_tarea: '12/05/2020',\r\n      id_zona    : 0,\r\n      nota: [''],\r\n      id_elementozona: 0,      \r\n      finalizada: false\r\n    });\r\n        this.forma.valueChanges.subscribe(console.log);\r\n\r\n  }\r\n\r\n  cargardataAlFormularioEdit() {\r\n\r\n    //this.forma.setValue({\r\n    this.forma.reset({\r\n      id_empleado     :0, \r\n      id_zona    : 0,\r\n      nota: [''],\r\n      id_elementozona: 0,      \r\n      finalizada: false\r\n    });\r\n\r\n  }\r\n\r\n  guardar() {\r\n    console.log(  \"VALOR DE FORMA EN GUARDAR() \" ,this.forma );                                                                                                                                         \r\n     \r\n    if ( this.forma.invalid ) {\r\n\r\n\r\n      return Object.values( this.forma.controls ).forEach( control => {\r\n        \r\n        if ( control instanceof FormGroup ) {\r\n          Object.values( control.controls ).forEach( control => control.markAsTouched() );\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n        \r\n        \r\n      })\r\n         \r\n    }\r\n    this.tareaencurso = JSON.parse(JSON.stringify(this.forma.value))\r\n   \r\n    this.autocontrolservice.saveTarea(this.tareaencurso).subscribe(\r\n      res => {\r\n        //this.empleados = res;\r\n        console.log(\"ESTSOS SON LOS EMPLEADOS: \", res )\r\n        this.cargarGrid();\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )\r\n\r\n    // Posteo de información\r\n    this.forma.reset({\r\n      nombre: 'Sin nombre'\r\n    });\r\n\r\n  }\r\n\r\n  getEmpleados(){\r\n    this.autocontrolservice.getEmpleados().subscribe(\r\n      res => {\r\n        this.empleados = res;\r\n        console.log(res)\r\n\r\n        this.setEmpleado();\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )}\r\n\r\n  setEmpleado() {\r\n    const empleadoSeleccionado = this.empleados.find(empleado => \r\n      empleado.nombre == this.mensajecadena.nombre\r\n    )\r\n\r\n    this.forma.get('id_empleado').setValue(empleadoSeleccionado.id)\r\n  }\r\n\r\n  cargarZonas(){\r\n    this.autocontrolservice.getZonas().subscribe(\r\n      res => {\r\n        this.zonasTienda = res;\r\n        console.log(this.zonasTienda)\r\n        \r\n        this.setZona();\r\n        \r\n        \r\n      },\r\n      err => console.error(err)\r\n  )}\r\n\r\n  setZona() {\r\n    const zonaSeleccionada = this.zonasTienda.find(zona => \r\n      zona.nombre == this.mensajecadena.nombre // zonaSeleccionada\r\n    )\r\n\r\n     this.forma.get('id_zona').setValue(zonaSeleccionada.id)\r\n  }\r\n\r\n  cargarElementosZona(selectedValue: number){\r\n    const idZona = this.forma.get('id_zona').value\r\n    console.log('cargarELEMENTOSzonas variable idzona ',idZona)\r\n    if (idZona != null) {    \r\n      this.autocontrolservice.getElementosZonaPorzona(idZona).subscribe(\r\n        res => {\r\n          this.elementosZona = res;\r\n          console.log(this.elementosZona )\r\n        },\r\n        err => console.error(err)           \r\n      )}\r\n  }\r\n \r\n  // metodo creado para probar error\r\n  filterChanged(selectedValue:string){\r\n    console.log('value is ',selectedValue);\r\n \r\n  }\r\n\r\n  cargarGrid(){\r\n    this.autocontrolservice.getElementosGrid().subscribe(\r\n      res => {\r\n        this.tareasrealizadas = res;       \r\n        console.log(\"tareas \", this.tareasrealizadas )\r\n\r\n        this.dataSource = res\r\n      },\r\n      err => console.error(\"dea error\", err)           \r\n    )}\r\n\r\n    // Row clicked JESUS\r\n\r\n    \r\n   \r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n","<h4>Edita datos una tarea- Formularios <small> Reactivos </small></h4>\r\n<hr>\r\n<form autocomplete=\"off\" [formGroup]=\"forma\">\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">Fecha</label>\r\n    <div class=\"col example-full-width\">\r\n        <input matInput [matDatepicker]=\"picker\" class=\"form-control\" placeholder=\"Fecha\"  formControlName=\"fecha_tarea\">\r\n        <mat-datepicker #picker></mat-datepicker>\r\n        <button mat-raised-button (click)=\"picker.open()\">Open</button>       \r\n    </div>\r\n  </div>\r\n\r\n \r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">Nombre</label>\r\n    <div class=\"col\">\r\n        <select class=\"form-control\" \r\n                placeholder=\"Nombre\"  \r\n                formControlName=\"id_empleado\"     >\r\n                <option  id=\"nombre\"                   \r\n                [value] = \"empleado.id\"\r\n                *ngFor = \"let empleado of empleados\"\r\n                  >{{empleado.nombre}}</option>\r\n        </select>\r\n         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Zona de la tienda</label>\r\n      <div class=\"col\">\r\n        <select (change)=\"cargarElementosZona($event.target.value)\" \r\n                class=\"form-control\" \r\n                placeholder=\"Zona\"  \r\n                formControlName=\"id_zona\">                \r\n               <option id=\"zona\" \r\n               [value] = \"zona.id\"\r\n                *ngFor = \"let zona of zonasTienda\" >{{zona.nombre}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Qué parte concretamente</label>\r\n      <div class=\"col\">\r\n        <select  class=\"form-control\" \r\n                 placeholder=\"Zona\"  \r\n                 formControlName=\"id_elementozona\">\r\n                <option  *ngFor = \"let elemento of elementosZona\" [value]=elemento.id>{{elemento.description_obj}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row align-items-end\">\r\n      <label class=\"col-2 col-form-label\" value=\"\">Finalizada</label>\r\n      <div class=\"col\">\r\n       <label><input type=\"checkbox\" value=\"\" formControlName=\"finalizada\"></label>\r\n      </div>                                        \r\n     </div>\r\n\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">&nbsp;</label>\r\n    <div class=\"input-group col\">\r\n      <button type=\"submit\" (click)=\"guardar()\" class=\"btn btn-outline-primary btn-block\">\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </div>  \r\n\r\n  \r\n  <div *ngIf=\"message$\" class=\"alert alert-success\">\r\n \r\n    {{ message$.text }}\r\n    </div>\r\n\r\n\r\n\r\n</form>\r\n\r\n<br>\r\n<pre>\r\n  Estado del hijo  {{forma.valid}}  \r\n</pre>\r\n\r\n<pre>\r\n  {{forma.value | json }}\r\n \r\n  <pre><b>Component1:</b> {{comp1Val}}</pre>\r\n  <pre><b>Component1:</b> {{mensajecadena| json}}</pre>\r\n</pre>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Empleados } from '../../models/empleados';\r\nimport { AutocontrolService } from 'src/app/services/autocontrol.service';\r\nimport {  Router  } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-empleado-form',\r\n  templateUrl: './empleado-form.component.html',\r\n  styleUrls: ['./empleado-form.component.css']\r\n})\r\nexport class EmpleadoFormComponent implements OnInit {\r\n\r\n  @HostBinding('class') classes='row';\r\n\r\n  empleado:Empleados = new Empleados();\r\n\r\n  edit: boolean = false;\r\n\r\n  constructor(private autocontrolService: AutocontrolService, private router : Router, private activedRoute: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const params = this.activedRoute.snapshot.params;\r\n    if (params.id) {\r\n      this.autocontrolService.getEmpleado(params.id)\r\n        .subscribe(   (res:Empleados) => {\r\n            console.log(\"NGONINIT \", res);\r\n            console.log(\"RES \",res);                  \r\n            //this.game = res;\r\n            this.empleado = res;\r\n            console.log(\"THIS.GAME \", this.empleado);\r\n            this.edit = true;\r\n          },\r\n          err => console.error(err)\r\n        )\r\n    }    \r\n  }\r\n\r\n  saveNewEmpleado() {\r\n    // PAAA GUARDARLO LLAMAMOS AL METODO DEL SERVCVIICIO\r\n    //delete this.game.created_at;\r\n    //delete this.game.id;\r\n    console.log('saveNEWgame')\r\n    this.autocontrolService.saveEmpleado(this.empleado)\r\n      .subscribe(\r\n        res => {console.log(\"hola\",res);\r\n          this.router.navigate(['/empleados'])\r\n        },\r\n        err => console.error(\"error\", err)\r\n      )\r\n  }\r\n\r\n  updateEmpleado() {\r\n    delete this.empleado.created_at;\r\n    console.log (' en el update GAME QUE PASA ' , this.empleado)\r\n    this.autocontrolService.updateEmpleados(this.empleado.id, this.empleado)\r\n    .subscribe(  \r\n        res => { console.log(\"guyas\");        \r\n       }, err => console.error  ('dfdffd')\r\n    )\r\n            \r\n    \r\n       \r\n      \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-4 offset-md-2\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <form>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" nombre=\"tittle\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" class=\"form-control\" autofocus>                    \r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea nombre=\"nombre\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" rows=\"2\" class=\"form-control\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"url\" nombre=\"image\" [(ngModel)] = \"empleado.image\" placeholder=\"Image\" class=\"form-control\">\r\n                </div>\r\n                <button class=\"btn btn-success btn-block\" (click)=\"edit ? updateEmpleado() : saveNewEmpleado()\"> \r\n                    Save\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- mostrar visualizacion -->\r\n<div class=\"col-md-4\">\r\n    <div class=\"card card-body text-center\">\r\n        <img [src]=\"empleado.image == '' ? '/assets/noimage.png' : empleado.image\" class= \"card-img-top\">\r\n        <h3>{{empleado.id}}. {{empleado.nombre == '' ? 'Nombre empleado ' : empleado.nombre }}</h3>\r\n        <p>{{empleado.nombre == '' ? 'whirte your nombre ' : empleado.nombre }} </p>\r\n        <p>{{empleado.created_at }} | date: 'yyy-MM-dd'</p>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { AutocontrolService } from '../../services/autocontrol.service';\r\n\r\n@Component({\r\n  selector: 'app-game-list',\r\n  templateUrl: './empleados-list.component.html',\r\n  styleUrls: ['./empleados-list.component.css']\r\n})\r\nexport class EmpleadosListComponent implements OnInit {\r\n\r\n  @HostBinding('class') classes = 'row'\r\n  empleados: any = [];\r\n  \r\n\r\n  constructor(private autocontrolService: AutocontrolService) { }\r\n\r\n  ngOnInit() {\r\n    this.getEmpleados();\r\n    \r\n  }\r\n\r\n  getEmpleados() {\r\n    this.autocontrolService.getEmpleados().subscribe(\r\n      res => {\r\n        this.empleados = res;\r\n      },\r\n      err => console.error(err)\r\n    );\r\n\r\n  }\r\n\r\n  deleteEmpleado ( id: string ) {\r\n    this.autocontrolService.deleteEmpleado(id).subscribe(\r\n      res => {\r\n        console.log(res)      \r\n      },\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"col-md-4\" *ngFor=\"let empleado of empleados\">\r\n    <div class=\"card text-center\">\r\n        <div class= \"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\r\n            {{empleado.name}}\r\n            <button class=\"btn btn-danger\" (click)=\"deleteEmpleado(empleado.id)\">\r\n                <i class=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n        <img [src]=\"empleado.image\" class=\"card-img-top\">\r\n        <div class=\"card-body\"> \r\n            <p>{{empleado.description}}</p>\r\n            <a [routerLink]=\"['/empleados/edit',empleado.id]\" class=\"btn btn-info btn-block\" >\r\n                EDIT GAME\r\n            </a>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">CRUD DE MYSQL</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n\r\n        <li class=\"nav-item\">\r\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \r\n          <a class=\"nav-link\" routerLink=\"/autocontrol\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Autocontrol</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <!-- dia 15/07/20 esta opción no la utilizo -->\r\n          <!-- Empezé a programar con la base de esta parte y depsues cree mi funcionalidad -->\r\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \r\n          <a class=\"nav-link\" routerLink=\"/games\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Empleados</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <!-- dia 15/07/20 esta opción no la utilizo -->\r\n          <!-- Empezé a programar con la base de esta parte y depsues cree mi funcionalidad -->\r\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \r\n          <a class=\"nav-link\" routerLink=\"/games/add\" routerLinkActive=\"active\"><i class=\"fas fa-plus-circle\"></i> añadir empleados</a>\r\n        </li>\r\n     \r\n       \r\n      </ul>\r\n     \r\n    </div>\r\n</div>\r\n  </nav>\r\n\r\n  ","export class Empleados {\r\n    id?: number;\r\n    nombre: string;\r\n    apellidos: string;\r\n    image?: string;\r\n    created_at?:Date\r\n}\r\n\r\n","export class Tareas {\r\n    id?: number;\r\n    id_empleado     : number;\r\n    id_zona    : number;\r\n    id_elementozona: number;\r\n    nota?: string;\r\n    finalizada: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient }from '@angular/common/http';\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { take } from 'rxjs/operators';\r\n\r\n// con esta interface importada, se puede enviar el envio del uego por saveGame\r\nimport { Empleados } from '../models/empleados';\r\n\r\n// COMPARTIR DATOS ENTRE SIBILINGS\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n// COMUNICACION ENTRE COMPONENTES\r\n// https://stackblitz.com/edit/angular-6-communicating-between-components-1gunkw?file=app%2F_services%2Fmessage.service.ts\r\n@Injectable()\r\n//\r\nexport class AutocontrolService {\r\n\r\n  API_URI = 'http://localhost:3000/api';\r\n\r\n// COMUNICACION ENTRE COMPONENTES SIBILINGS\r\n//private subject = new Subject<any>();\r\n// https://stackblitz.com/edit/angular-shared-service?file=app%2Fcommon%2Fshared.service.ts\r\n\r\ncomp1Val: string;\r\n_comp1ValueBS = new BehaviorSubject<string>('');\r\n\r\n\r\ncomp2Val: string;\r\n_comp2ValueBS = new BehaviorSubject<string>('');\r\n\r\n\r\n// Es una buena practica definirlo asi\r\n// https://medium.com/angular-chile/comunicaci%C3%B3n-entre-componentes-explicado-con-dragon-ball-z-angular-7-parte-2-5403ec132718\r\nbulma$ = this._comp1ValueBS.asObservable(); \r\n\r\n\r\n\r\n// END COMUNICACION ENTRE COMPONENTES SIBILINGS\r\n\r\n  constructor( private http: HttpClient ) { \r\n\r\n    // comunicacion sibilings\r\n\r\n    //this.comp1Val;\r\n    //this.comp2Val;\r\n   \r\n\r\n    //this._comp1ValueBS.next(this.comp1Val);\r\n    //this._comp2ValueBS.next(this.comp2Val);\r\n\r\n  }\r\n \r\n\r\n\r\n  getEmpleados() {\r\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\r\n    return this.http.get(`${this.API_URI}/empleados`);\r\n\r\n  }\r\n\r\n  getZonas() {\r\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\r\n    return this.http.get(`${this.API_URI}/zonas`);\r\n\r\n  }\r\n\r\n  getEmpleado(id:string) {\r\n    return this.http.get(`${this.API_URI}/empleado/${id}`);\r\n  }\r\n\r\n  deleteEmpleado(id:string) {\r\n    return this.http.delete(`${this.API_URI}/empleado/${id}`);\r\n  }\r\n\r\n  saveEmpleado(empleado: Empleados) {\r\n    console.log(\"SAVE GAME \" , empleado);   \r\n    return this.http.post(`${this.API_URI}/empleado/`, empleado);\r\n\r\n  }\r\n\r\n  updateEmpleados (id: string|number, updatedEmpleado:Empleados ): Observable<any> {\r\n     console.log(\"actualizado\", updatedEmpleado)\r\n       return this.http.put(`${this.API_URI}/empleado/${id}`,updatedEmpleado)\r\n     \r\n  }\r\n\r\n  getElementosZonaPorzona(id:number) {\r\n    return this.http.get(`${this.API_URI}/elementosporzona/${id}`);\r\n  }\r\n\r\n  saveTarea(tareas: any) {\r\n    console.log(\"SAVE TAREA  \" , tareas);\r\n    \r\n    return this.http.post(`${this.API_URI}/tareas`, tareas);\r\n\r\n  }\r\n\r\n  getElementosGrid(){\r\n    return this.http.get(`${this.API_URI}/tareas`); \r\n\r\n\r\n  }\r\n\r\n  editTarea(idtask: any){   \r\n    console.log('tarea ',idtask)\r\n    \r\n    return this.http.get(`${this.API_URI}/tareas/editarea/${idtask}`);\r\n      \r\n  }\r\n\r\n  \r\n  updateComp1Val(val) {\r\n    this.comp1Val = val;\r\n    this._comp1ValueBS.next(this.comp1Val);\r\n    this.bulma$.pipe(take(1))\r\n \r\n  }\r\n  \r\n  // actualiza el valor cuando mandan una actualizacion desde el\r\n  // componente autocontrol. lo que seria un cick en el grid\r\n  // END\r\n\r\n\r\n  updateComp2Val(val) {\r\n    this.comp2Val = val;\r\n    this._comp2ValueBS.next(this.comp2Val);\r\n  }\r\n\r\n  enviar(mensaje) {\r\n    // function que llamará quien quiera transmitir un mensaje.\r\n    console.log ( \" this._comp1ValueBS.next(mensaje) \", mensaje)\r\n    this._comp1ValueBS.next(mensaje);\r\n    console.log (\"despues del mensaje anterior \")\r\n  }\r\n\r\n\r\n \r\n\r\n \r\n\r\n}\r\n","export * from './autocontrol.service';","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface ErrorValidate {\r\n  [s:string]: boolean\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidadoresService {\r\n\r\n  constructor() { }\r\n\r\n  existeUsuario( control: FormControl ): Promise<ErrorValidate> | Observable<ErrorValidate> {\r\n\r\n    if( !control.value ) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      setTimeout(() => {\r\n        \r\n        if ( control.value === 'strider' ) {\r\n          resolve({ existe: true });\r\n        } else {\r\n          resolve( null );\r\n        }\r\n\r\n      }, 3500);\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  noHerrera( control: FormControl ): ErrorValidate {\r\n\r\n    if ( control.value?.toLowerCase() === 'herrera' ){\r\n      return {\r\n        noHerrera: true\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  passwordsIguales( pass1Name: string, pass2Name: string ) {\r\n\r\n    return ( formGroup: FormGroup ) => {\r\n\r\n      const pass1Control = formGroup.controls[pass1Name];\r\n      const pass2Control = formGroup.controls[pass2Name];\r\n\r\n      if ( pass1Control.value === pass2Control.value ) {\r\n        pass2Control.setErrors(null);\r\n      } else {\r\n        pass2Control.setErrors({ noEsIgual: true });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}