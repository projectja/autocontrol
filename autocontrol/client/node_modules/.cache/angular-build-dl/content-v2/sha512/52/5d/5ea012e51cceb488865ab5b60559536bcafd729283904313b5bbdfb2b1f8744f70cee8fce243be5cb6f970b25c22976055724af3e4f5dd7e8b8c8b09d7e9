{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/autocontrol-form/autocontrol-form.component.ts","./src/app/components/autocontrol-form/autocontrol-form.component.html","./src/app/components/empleado-form/empleado-form.component.ts","./src/app/components/empleado-form/empleado-form.component.html","./src/app/components/empleados-list/empleados-list.component.ts","./src/app/components/empleados-list/empleados-list.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/models/empleados.ts","./src/app/models/tareas.ts","./src/app/services/autocontrol.service.ts","./src/app/services/validadores.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\n\n\n\nconst routes: Routes = [\n  {\n    // como está redireccionando a otro sitio hay que añadir pathMatch y full\n    path:'',\n    redirectTo: 'games', pathMatch: 'full'\n  },\n  {\n    // cuando viiste la ruta /games se randeriza el componente gamelistcomponents\n    path: 'games',  component: EmpleadosListComponent\n  },\n  {\n    path: 'games/add', component: EmpleadoFormComponent\n\n  },\n  {\n\n    path: 'games/edit/:id', component: EmpleadoFormComponent\n\n  },\n  {\n    path: 'autocontrol', component: AutocontrolFormComponent\n\n  },\n  {\n    path: 'elementoszona', component: AutocontrolFormComponent\n\n  }\n                                      \n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n\n}\n","<H1>Cliente de angular</H1>\n<app-navigation>\n \n\n</app-navigation>\n<div class=\"container p-4\">\n    <router-outlet></router-outlet>\n</div>\n","\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule } from '@angular/forms';\n\n\nimport { NgModule } from '@angular/core';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n// con esto funcionara nuestro sirivio\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\n\n// esto vale pasra decirle que esta app tendraa este proveedor\nimport { AutocontrolService } from './services/autocontrol.service';\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\nimport {  MatSelectModule } from '@angular/material/select';\n\nimport {  MatFormFieldModule } from '@angular/material/form-field';\n\nimport {MatInputModule } from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { NgxFontAwesomeModule } from 'ngx-font-awesome';\nimport { AgGridModule } from 'ag-grid-angular';\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    EmpleadoFormComponent,\n    EmpleadosListComponent,\n    AutocontrolFormComponent\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BsDatepickerModule,    \n    BrowserAnimationsModule,\n    NgxFontAwesomeModule,    \n    BsDatepickerModule.forRoot(),\n    AgGridModule.withComponents([])\n  \n       \n \n  ],\n  providers: [AutocontrolService,\n    MatDatepickerModule\n             \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ValidadoresService } from '../../services/validadores.service';\nimport { AutocontrolService } from '../../services/autocontrol.service';\nimport { Tareas } from '../../models/tareas';\n\n\n\n\n@Component({\n  selector: 'app-autoncontrol-form',\n  templateUrl: './autocontrol-form.component.html',\n  styleUrls: ['./autocontrol-form.component.css']\n})\nexport class AutocontrolFormComponent implements OnInit {\n\n  forma: FormGroup;\n  empleados: any = [];\n  zonasTienda: any = [];\n  elementosZona: any = [];\n  tareaencurso: Tareas = new Tareas();\n\n  \n  columnDefs = [\n    {headerName: 'Nomrbre', field: 'nombre' },\n    {headerName: 'Zona', field: 'zona' },\n    {headerName: 'Parte', field: 'parte'},\n    {headerName: 'Finalizada', field: 'finalizada'}\n];\n\nrowData = [];\n\n//[\n\n//  { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true }\n    \n// ];\n\n  // prueba codigo - para borrar cuando se aclare el error\nselectedFilter:string;\npublic filterTypes = [\n{value:'percentage', display:'percentage'},\n{value:'amount', display:'amount'},\n];\n// fin prueba para error\n\n  constructor( private fb: FormBuilder,\n               private validadores: ValidadoresService, private autocontrolservice: AutocontrolService ) { \n\n    this.crearFormulario();\n    this.cargarDataAlFormulario();\n    this.cargarGrid();\n    this.crearListeners();\n\n    //0prueba errors\n    this.selectedFilter='percentage';\n\n  }\n\n  ngOnInit() {\n    this.getEmpleados();\n    this.cargarZonas();\n    \n  }\n\n  /*\n\n  get pasatiempos() {\n    return this.forma.get('pasatiempos') as FormArray;\n  }\n\n  get nombreNoValido() {\n    return this.forma.get('nombre').invalid && this.forma.get('nombre').touched\n  }\n\n  get apellidoNoValido() {\n    return this.forma.get('apellido').invalid && this.forma.get('apellido').touched\n  }\n\n  get correoNoValido() {\n    return this.forma.get('correo').invalid && this.forma.get('correo').touched\n  }\n\n  get usuarioNoValido() {\n    return this.forma.get('usuario').invalid && this.forma.get('usuario').touched\n  }\n\n  get distritoNoValido() {\n    return this.forma.get('direccion.distrito').invalid && this.forma.get('direccion.distrito').touched\n  }\n\n  get ciudadNoValido() {\n    return this.forma.get('direccion.ciudad').invalid && this.forma.get('direccion.ciudad').touched\n  }\n\n  get pass1NoValido() {\n    return this.forma.get('pass1').invalid && this.forma.get('pass1').touched;\n  }\n\n  get pass2NoValido() {\n    const pass1 = this.forma.get('pass1').value;\n    const pass2 = this.forma.get('pass2').value;\n\n    return ( pass1 === pass2 ) ? false : true;\n  }\n*/\n\n\n  crearFormulario() {\n\n    this.forma = this.fb.group({\n      id_empleado     : 0,\n      id_zona    : 0,\n      id_elementozona: 0,\n      nota: [''],\n      finalizada: false\n      /* nombre  : ['', [ Validators.required, Validators.minLength(5) ]  ],\n      apellido: ['', [Validators.required, this.validadores.noHerrera ] ],\n      correo  : ['', [ Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')] ],\n      usuario : ['', , this.validadores.existeUsuario ], */\n      /* pass1   : ['', Validators.required ],\n      pass2   : ['', Validators.required ],\n      direccion: this.fb.group({\n        distrito: ['', Validators.required ],\n        ciudad  : ['', Validators.required ], \n      \n      }), \n      \n      pasatiempos: this.fb.array([])\n    },{\n      validators: this.validadores.passwordsIguales('pass1','pass2') */\n    }); \n\n  }\n\n  crearListeners() {\n    // this.forma.valueChanges.subscribe( valor => {\n    //   console.log(valor);\n    // });\n\n    // this.forma.statusChanges.subscribe( status => console.log({ status }));\n    this.forma.get('id_empleado').valueChanges.subscribe( console.log );\n  }\n\n  cargarDataAlFormulario() {\n\n    // this.forma.setValue({\n    this.forma.reset({\n      id_empleado     : 0,\n      id_zona    : 0,\n      nota: [''],\n      id_elementozona: 0,      \n      finalizada: false\n    });\n\n  }\n\n/*\n\n  agregarPasatiempo() {\n    this.pasatiempos.push(  this.fb.control('')  );\n  }\n  \n  borrarPasatiempo(i: number) {\n    this.pasatiempos.removeAt(i);\n  }\n\n*/\n  guardar() {\n    console.log(  \"VALOR DE FORMA EN GUARDAR() \" ,this.forma );                                                                                                                                         \n     \n    if ( this.forma.invalid ) {\n\n\n      return Object.values( this.forma.controls ).forEach( control => {\n        \n        if ( control instanceof FormGroup ) {\n          Object.values( control.controls ).forEach( control => control.markAsTouched() );\n        } else {\n          control.markAsTouched();\n        }\n        \n        \n      })\n         \n    }\n    this.tareaencurso = JSON.parse(JSON.stringify(this.forma.value))\n   \n    this.autocontrolservice.saveTarea(this.tareaencurso).subscribe(\n      res => {\n        //this.empleados = res;\n        console.log(\"ESTSOS SON LOS EMPLEADOS: \", res )\n        \n      },\n\n      err => console.error(err)\n  )\n\n    // Posteo de información\n    this.forma.reset({\n      nombre: 'Sin nombre'\n    });\n\n  }\n\n  getEmpleados(){\n    this.autocontrolservice.getEmpleados().subscribe(\n      res => {\n        this.empleados = res;\n        console.log(res)\n        \n      },\n\n      err => console.error(err)\n  )}\n\n  cargarZonas(){\n    this.autocontrolservice.getZonas().subscribe(\n      res => {\n        this.zonasTienda = res;\n        console.log(this.zonasTienda  )\n        \n        \n      },\n      err => console.error(err)\n  )}\n\n  cargarElementosZona(selectedValue: number){\n    const idZona = this.forma.get('id_zona').value\n    console.log('cargarELEMENTOSzonas variable idzona ',idZona)\n    if (idZona != null) {    \n      this.autocontrolservice.getElementosZonaPorzona(idZona).subscribe(\n        res => {\n          this.elementosZona = res;\n          console.log(this.elementosZona )\n        },\n        err => console.error(err)           \n      )}\n  }\n \n  // metodo creado para probar error\n  filterChanged(selectedValue:string){\n    console.log('value is ',selectedValue);\n \n  }\n\n  cargarGrid(){\n\n  }\n\n \n\n}\n\n\n\n\n","<h4>Formularios <small> Reactivos </small></h4>\n<hr>\n<form autocomplete=\"off\" [formGroup]=\"forma\" (ngSubmit)=\"guardar()\">\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Nombre</label>\n      <div class=\"col\">\n        <select class=\"form-control\" placeholder=\"Nombre\"  formControlName=\"id_empleado\">\n          <option  *ngFor = \"let empleado of empleados\" [value]=empleado.id>{{empleado.nombre}}</option>\n        </select>\n         \n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Zona de la tienda</label>\n      <div class=\"col\">\n        <select (change)=\"cargarElementosZona($event.target.value)\" class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_zona\">\n          <option  *ngFor = \"let zona of zonasTienda\" [value]=zona.id>{{zona.nombre}}</option>\n        </select>         \n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Qué parte concretamente</label>\n      <div class=\"col\">\n        <select  class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_elementozona\">\n          <option  *ngFor = \"let elemento of elementosZona\" [value]=elemento.id>{{elemento.description_obj}}</option>\n        </select>         \n      </div>\n    </div>\n\n\n    <div class=\"form-group row align-items-end\">\n      <label class=\"col-2 col-form-label\" value=\"\">Finalizada</label>\n      <div class=\"col\">\n       <label><input type=\"checkbox\" value=\"\" formControlName=\"finalizada\"></label>\n      </div>                                        \n     </div>\n\n<!--\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Zona</label>\n      <div class=\"col\">\n\n        <input class=\"form-control\"\n               type=\"text\"\n               placeholder=\"Zona\"\n               formControlName=\"apellido\"\n               [class.is-invalid]=\"apellidoNoValido\">\n        <small *ngIf=\"apellidoNoValido\" class=\"text-danger\">\n                Ingrese el apellido\n        </small>\n      </div>\n    </div>\n  -->\n\n\n    <!-- prueba error en html  -->\n    <select (change)=\"filterChanged($event.target.value)\">\n      <option *ngFor=\"let type of filterTypes\" [value]=\"type.value\">{{type.display}}\n      </option>\n      </select>\n\n\n  <div class=\"form-group row\">\n    <label class=\"col-2 col-form-label\">&nbsp;</label>\n    <div class=\"input-group col\">\n      <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\n        Guardar\n      </button>\n    </div>\n  </div>  \n\n</form>\n\n<ag-grid-angular \n    style=\"width: 500px; height: 500px;\" \n    class=\"ag-theme-balham\"\n    [rowData]=\"rowData\" \n    [columnDefs]=\"columnDefs\">\n</ag-grid-angular>\n\n\n\n\n\n<hr>\n<pre>\n  Estado del formulario: {{ forma.valid }}\n  <br>\n  Status: {{ forma.status }}\n</pre>\n\n<pre>\n\n  {{ forma.value | json }}\n\n</pre>","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { Empleados } from '../../models/empleados';\nimport { AutocontrolService } from 'src/app/services/autocontrol.service';\nimport {  Router  } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-empleado-form',\n  templateUrl: './empleado-form.component.html',\n  styleUrls: ['./empleado-form.component.css']\n})\nexport class EmpleadoFormComponent implements OnInit {\n\n  @HostBinding('class') classes='row';\n\n  empleado:Empleados = new Empleados();\n\n  edit: boolean = false;\n\n  constructor(private autocontrolService: AutocontrolService, private router : Router, private activedRoute: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    const params = this.activedRoute.snapshot.params;\n    if (params.id) {\n      this.autocontrolService.getEmpleado(params.id)\n        .subscribe(   (res:Empleados) => {\n            console.log(\"NGONINIT \", res);\n            console.log(\"RES \",res);                  \n            //this.game = res;\n            this.empleado = res;\n            console.log(\"THIS.GAME \", this.empleado);\n            this.edit = true;\n          },\n          err => console.error(err)\n        )\n    }    \n  }\n\n  saveNewEmpleado() {\n    // PAAA GUARDARLO LLAMAMOS AL METODO DEL SERVCVIICIO\n    //delete this.game.created_at;\n    //delete this.game.id;\n    console.log('saveNEWgame')\n    this.autocontrolService.saveEmpleado(this.empleado)\n      .subscribe(\n        res => {console.log(\"hola\",res);\n          this.router.navigate(['/empleados'])\n        },\n        err => console.error(\"error\", err)\n      )\n  }\n\n  updateEmpleado() {\n    delete this.empleado.created_at;\n    console.log (' en el update GAME QUE PASA ' , this.empleado)\n    this.autocontrolService.updateEmpleados(this.empleado.id, this.empleado)\n    .subscribe(  \n        res => { console.log(\"guyas\");        \n       }, err => console.error  ('dfdffd')\n    )\n            \n    \n       \n      \n\n  }\n\n}\n","<div class=\"col-md-4 offset-md-2\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"text\" nombre=\"tittle\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" class=\"form-control\" autofocus>                    \n                </div>\n                <div class=\"form-group\">\n                    <textarea nombre=\"nombre\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" rows=\"2\" class=\"form-control\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"url\" nombre=\"image\" [(ngModel)] = \"empleado.image\" placeholder=\"Image\" class=\"form-control\">\n                </div>\n                <button class=\"btn btn-success btn-block\" (click)=\"edit ? updateEmpleado() : saveNewEmpleado()\"> \n                    Save\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- mostrar visualizacion -->\n<div class=\"col-md-4\">\n    <div class=\"card card-body text-center\">\n        <img [src]=\"empleado.image == '' ? '/assets/noimage.png' : empleado.image\" class= \"card-img-top\">\n        <h3>{{empleado.id}}. {{empleado.nombre == '' ? 'Nombre empleado ' : empleado.nombre }}</h3>\n        <p>{{empleado.nombre == '' ? 'whirte your nombre ' : empleado.nombre }} </p>\n        <p>{{empleado.created_at }} | date: 'yyy-MM-dd'</p>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { AutocontrolService } from '../../services/autocontrol.service';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './empleados-list.component.html',\n  styleUrls: ['./empleados-list.component.css']\n})\nexport class EmpleadosListComponent implements OnInit {\n\n  @HostBinding('class') classes = 'row'\n  empleados: any = [];\n  \n\n  constructor(private autocontrolService: AutocontrolService) { }\n\n  ngOnInit() {\n    this.getEmpleados();\n    \n  }\n\n  getEmpleados() {\n    this.autocontrolService.getEmpleados().subscribe(\n      res => {\n        this.empleados = res;\n      },\n      err => console.error(err)\n    );\n\n  }\n\n  deleteEmpleado ( id: string ) {\n    this.autocontrolService.deleteEmpleado(id).subscribe(\n      res => {\n        console.log(res)      \n      },\n      err => console.log(err)\n    )\n  }\n\n\n\n}\n","<div class=\"col-md-4\" *ngFor=\"let empleado of empleados\">\n    <div class=\"card text-center\">\n        <div class= \"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\n            {{empleado.name}}\n            <button class=\"btn btn-danger\" (click)=\"deleteEmpleado(empleado.id)\">\n                <i class=\"far fa-trash-alt\"></i>\n            </button>\n        </div>\n        <img [src]=\"empleado.image\" class=\"card-img-top\">\n        <div class=\"card-body\"> \n            <p>{{empleado.description}}</p>\n            <a [routerLink]=\"['/empleados/edit',empleado.id]\" class=\"btn btn-info btn-block\" >\n                EDIT GAME\n            </a>\n\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n<div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">CRUD DE MYSQL</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n\n        <li class=\"nav-item\">\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \n          <a class=\"nav-link\" routerLink=\"/autocontrol\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Autocontrol</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \n          <a class=\"nav-link\" routerLink=\"/games\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Empleados</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/games/add\" routerLinkActive=\"active\"><i class=\"fas fa-plus-circle\"></i> añadir empleados</a>\n        </li>\n     \n       \n      </ul>\n     \n    </div>\n</div>\n  </nav>\n\n  ","export class Empleados {\r\n    id?: number;\r\n    nombre: string;\r\n    apellidos: string;\r\n    image?: string;\r\n    created_at?:Date\r\n}\r\n\r\n","export class Tareas {\r\n    id?: number;\r\n    id_empleado     : number;\r\n    id_zona    : number;\r\n    id_elementozona: number;\r\n    nota?: string;\r\n    finalizada: boolean;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient }from '@angular/common/http';\n\n// con esta interface importada, se puede enviar el envio del uego por saveGame\nimport { Empleados } from '../models/empleados';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutocontrolService {\n\n  API_URI = 'http://localhost:3000/api';\n  constructor( private http: HttpClient ) { }\n\n\n  getEmpleados() {\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\n    return this.http.get(`${this.API_URI}/empleados`);\n\n  }\n\n  getZonas() {\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\n    return this.http.get(`${this.API_URI}/zonas`);\n\n  }\n\n  getEmpleado(id:string) {\n    return this.http.get(`${this.API_URI}/empleado/${id}`);\n  }\n\n  deleteEmpleado(id:string) {\n    return this.http.delete(`${this.API_URI}/empleado/${id}`);\n  }\n\n  saveEmpleado(empleado: Empleados) {\n    console.log(\"SAVE GAME \" , empleado);\n    console.log\n    return this.http.post(`${this.API_URI}/empleado/`, empleado);\n\n  }\n\n  updateEmpleados (id: string|number, updatedEmpleado:Empleados ): Observable<any> {\n     console.log(\"actualizado\", updatedEmpleado)\n       return this.http.put(`${this.API_URI}/empleado/${id}`,updatedEmpleado)\n     \n  }\n\n  getElementosZonaPorzona(id:number) {\n    return this.http.get(`${this.API_URI}/elementosporzona/${id}`);\n  }\n\n  saveTarea(tareas: any) {\n    console.log(\"SAVE TAREA  \" , tareas);\n    \n    return this.http.post(`${this.API_URI}/tareas`, tareas);\n\n  }\n\n  getElementossGrid(){\n    return this.http.get(`${this.API_URI}/tareas`); \n\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\ninterface ErrorValidate {\n  [s:string]: boolean\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidadoresService {\n\n  constructor() { }\n\n  existeUsuario( control: FormControl ): Promise<ErrorValidate> | Observable<ErrorValidate> {\n\n    if( !control.value ) {\n      return Promise.resolve(null);\n    }\n\n    return new Promise( (resolve, reject) => {\n\n      setTimeout(() => {\n        \n        if ( control.value === 'strider' ) {\n          resolve({ existe: true });\n        } else {\n          resolve( null );\n        }\n\n      }, 3500);\n\n\n    });\n\n  }\n\n\n  noHerrera( control: FormControl ): ErrorValidate {\n\n    if ( control.value?.toLowerCase() === 'herrera' ){\n      return {\n        noHerrera: true\n      }\n    }\n\n    return null;\n  }\n\n  passwordsIguales( pass1Name: string, pass2Name: string ) {\n\n    return ( formGroup: FormGroup ) => {\n\n      const pass1Control = formGroup.controls[pass1Name];\n      const pass2Control = formGroup.controls[pass2Name];\n\n      if ( pass1Control.value === pass2Control.value ) {\n        pass2Control.setErrors(null);\n      } else {\n        pass2Control.setErrors({ noEsIgual: true });\n      }\n\n    }\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}