{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.html","webpack:///src/app/components/empleado-form/empleado-form.component.ts","webpack:///src/app/components/empleado-form/empleado-form.component.html","webpack:///src/app/components/empleados-list/empleados-list.component.ts","webpack:///src/app/components/empleados-list/empleados-list.component.html","webpack:///src/app/components/navigation/navigation.component.ts","webpack:///src/app/components/navigation/navigation.component.html","webpack:///src/app/models/empleados.ts","webpack:///src/app/models/tareas.ts","webpack:///src/app/services/autocontrol.service.ts","webpack:///src/app/services/validadores.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withComponents","declarations","providers","bootstrap","AutocontrolFormComponent","fb","validadores","autocontrolservice","empleados","zonasTienda","elementosZona","tareaencurso","columnDefs","headerName","field","rowData","filterTypes","value","display","crearFormulario","cargarDataAlFormulario","cargarGrid","crearListeners","selectedFilter","getEmpleados","cargarZonas","forma","group","id_empleado","id_zona","id_elementozona","nota","finalizada","get","valueChanges","subscribe","console","log","reset","invalid","Object","values","controls","forEach","control","markAsTouched","JSON","parse","stringify","saveTarea","res","err","error","nombre","getZonas","selectedValue","idZona","getElementosZonaPorzona","guardar","cargarElementosZona","filterChanged","EmpleadoFormComponent","autocontrolService","router","activedRoute","classes","empleado","edit","params","snapshot","getEmpleado","saveEmpleado","navigate","created_at","updateEmpleados","updateEmpleado","saveNewEmpleado","EmpleadosListComponent","deleteEmpleado","NavigationComponent","Empleados","Tareas","AutocontrolService","http","API_URI","post","updatedEmpleado","put","tareas","providedIn","ValidadoresService","reject","setTimeout","existe","toLowerCase","noHerrera","pass1Name","pass2Name","formGroup","pass1Control","pass2Control","setErrors","noEsIgual","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\n\n\n\nconst routes: Routes = [\n  {\n    // como está redireccionando a otro sitio hay que añadir pathMatch y full\n    path:'',\n    redirectTo: 'games', pathMatch: 'full'\n  },\n  {\n    // cuando viiste la ruta /games se randeriza el componente gamelistcomponents\n    path: 'games',  component: EmpleadosListComponent\n  },\n  {\n    path: 'games/add', component: EmpleadoFormComponent\n\n  },\n  {\n\n    path: 'games/edit/:id', component: EmpleadoFormComponent\n\n  },\n  {\n    path: 'autocontrol', component: AutocontrolFormComponent\n\n  },\n  {\n    path: 'elementoszona', component: AutocontrolFormComponent\n\n  }\n                                      \n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n\n}\n","<H1>Cliente de angular</H1>\n<app-navigation>\n \n\n</app-navigation>\n<div class=\"container p-4\">\n    <router-outlet></router-outlet>\n</div>\n","\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule } from '@angular/forms';\n\n\nimport { NgModule } from '@angular/core';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n// con esto funcionara nuestro sirivio\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\n\n// esto vale pasra decirle que esta app tendraa este proveedor\nimport { AutocontrolService } from './services/autocontrol.service';\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\nimport {  MatSelectModule } from '@angular/material/select';\n\nimport {  MatFormFieldModule } from '@angular/material/form-field';\n\nimport {MatInputModule } from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { NgxFontAwesomeModule } from 'ngx-font-awesome';\nimport { AgGridModule } from 'ag-grid-angular';\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    EmpleadoFormComponent,\n    EmpleadosListComponent,\n    AutocontrolFormComponent\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BsDatepickerModule,    \n    BrowserAnimationsModule,\n    NgxFontAwesomeModule,    \n    BsDatepickerModule.forRoot(),\n    AgGridModule.withComponents([])\n  \n       \n \n  ],\n  providers: [AutocontrolService,\n    MatDatepickerModule\n             \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ValidadoresService } from '../../services/validadores.service';\nimport { AutocontrolService } from '../../services/autocontrol.service';\nimport { Tareas } from '../../models/tareas';\n\n\n\n\n@Component({\n  selector: 'app-autoncontrol-form',\n  templateUrl: './autocontrol-form.component.html',\n  styleUrls: ['./autocontrol-form.component.css']\n})\nexport class AutocontrolFormComponent implements OnInit {\n\n  forma: FormGroup;\n  empleados: any = [];\n  zonasTienda: any = [];\n  elementosZona: any = [];\n  tareaencurso: Tareas = new Tareas();\n\n  \n  columnDefs = [\n    {headerName: 'Nomrbre', field: 'nombre' },\n    {headerName: 'Zona', field: 'zona' },\n    {headerName: 'Parte', field: 'parte'},\n    {headerName: 'Finalizada', field: 'finalizada'}\n];\n\nrowData = [];\n\n//[\n\n//  { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true }\n    \n// ];\n\n  // prueba codigo - para borrar cuando se aclare el error\nselectedFilter:string;\npublic filterTypes = [\n{value:'percentage', display:'percentage'},\n{value:'amount', display:'amount'},\n];\n// fin prueba para error\n\n  constructor( private fb: FormBuilder,\n               private validadores: ValidadoresService, private autocontrolservice: AutocontrolService ) { \n\n    this.crearFormulario();\n    this.cargarDataAlFormulario();\n    this.cargarGrid();\n    this.crearListeners();\n\n    //0prueba errors\n    this.selectedFilter='percentage';\n\n  }\n\n  ngOnInit() {\n    this.getEmpleados();\n    this.cargarZonas();\n    \n  }\n\n  /*\n\n  get pasatiempos() {\n    return this.forma.get('pasatiempos') as FormArray;\n  }\n\n  get nombreNoValido() {\n    return this.forma.get('nombre').invalid && this.forma.get('nombre').touched\n  }\n\n  get apellidoNoValido() {\n    return this.forma.get('apellido').invalid && this.forma.get('apellido').touched\n  }\n\n  get correoNoValido() {\n    return this.forma.get('correo').invalid && this.forma.get('correo').touched\n  }\n\n  get usuarioNoValido() {\n    return this.forma.get('usuario').invalid && this.forma.get('usuario').touched\n  }\n\n  get distritoNoValido() {\n    return this.forma.get('direccion.distrito').invalid && this.forma.get('direccion.distrito').touched\n  }\n\n  get ciudadNoValido() {\n    return this.forma.get('direccion.ciudad').invalid && this.forma.get('direccion.ciudad').touched\n  }\n\n  get pass1NoValido() {\n    return this.forma.get('pass1').invalid && this.forma.get('pass1').touched;\n  }\n\n  get pass2NoValido() {\n    const pass1 = this.forma.get('pass1').value;\n    const pass2 = this.forma.get('pass2').value;\n\n    return ( pass1 === pass2 ) ? false : true;\n  }\n*/\n\n\n  crearFormulario() {\n\n    this.forma = this.fb.group({\n      id_empleado     : 0,\n      id_zona    : 0,\n      id_elementozona: 0,\n      nota: [''],\n      finalizada: false\n      /* nombre  : ['', [ Validators.required, Validators.minLength(5) ]  ],\n      apellido: ['', [Validators.required, this.validadores.noHerrera ] ],\n      correo  : ['', [ Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')] ],\n      usuario : ['', , this.validadores.existeUsuario ], */\n      /* pass1   : ['', Validators.required ],\n      pass2   : ['', Validators.required ],\n      direccion: this.fb.group({\n        distrito: ['', Validators.required ],\n        ciudad  : ['', Validators.required ], \n      \n      }), \n      \n      pasatiempos: this.fb.array([])\n    },{\n      validators: this.validadores.passwordsIguales('pass1','pass2') */\n    }); \n\n  }\n\n  crearListeners() {\n    // this.forma.valueChanges.subscribe( valor => {\n    //   console.log(valor);\n    // });\n\n    // this.forma.statusChanges.subscribe( status => console.log({ status }));\n    this.forma.get('id_empleado').valueChanges.subscribe( console.log );\n  }\n\n  cargarDataAlFormulario() {\n\n    // this.forma.setValue({\n    this.forma.reset({\n      id_empleado     : 0,\n      id_zona    : 0,\n      nota: [''],\n      id_elementozona: 0,      \n      finalizada: false\n    });\n\n  }\n\n/*\n\n  agregarPasatiempo() {\n    this.pasatiempos.push(  this.fb.control('')  );\n  }\n  \n  borrarPasatiempo(i: number) {\n    this.pasatiempos.removeAt(i);\n  }\n\n*/\n  guardar() {\n    console.log(  \"VALOR DE FORMA EN GUARDAR() \" ,this.forma );                                                                                                                                         \n     \n    if ( this.forma.invalid ) {\n\n\n      return Object.values( this.forma.controls ).forEach( control => {\n        \n        if ( control instanceof FormGroup ) {\n          Object.values( control.controls ).forEach( control => control.markAsTouched() );\n        } else {\n          control.markAsTouched();\n        }\n        \n        \n      })\n         \n    }\n    this.tareaencurso = JSON.parse(JSON.stringify(this.forma.value))\n   \n    this.autocontrolservice.saveTarea(this.tareaencurso).subscribe(\n      res => {\n        //this.empleados = res;\n        console.log(\"ESTSOS SON LOS EMPLEADOS: \", res )\n        \n      },\n\n      err => console.error(err)\n  )\n\n    // Posteo de información\n    this.forma.reset({\n      nombre: 'Sin nombre'\n    });\n\n  }\n\n  getEmpleados(){\n    this.autocontrolservice.getEmpleados().subscribe(\n      res => {\n        this.empleados = res;\n        console.log(res)\n        \n      },\n\n      err => console.error(err)\n  )}\n\n  cargarZonas(){\n    this.autocontrolservice.getZonas().subscribe(\n      res => {\n        this.zonasTienda = res;\n        console.log(this.zonasTienda  )\n        \n        \n      },\n      err => console.error(err)\n  )}\n\n  cargarElementosZona(selectedValue: number){\n    const idZona = this.forma.get('id_zona').value\n    console.log('cargarELEMENTOSzonas variable idzona ',idZona)\n    if (idZona != null) {    \n      this.autocontrolservice.getElementosZonaPorzona(idZona).subscribe(\n        res => {\n          this.elementosZona = res;\n          console.log(this.elementosZona )\n        },\n        err => console.error(err)           \n      )}\n  }\n \n  // metodo creado para probar error\n  filterChanged(selectedValue:string){\n    console.log('value is ',selectedValue);\n \n  }\n\n  cargarGrid(){\n\n  }\n\n \n\n}\n\n\n\n\n","<h4>Formularios <small> Reactivos </small></h4>\n<hr>\n<form autocomplete=\"off\" [formGroup]=\"forma\" (ngSubmit)=\"guardar()\">\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Nombre</label>\n      <div class=\"col\">\n        <select class=\"form-control\" placeholder=\"Nombre\"  formControlName=\"id_empleado\">\n          <option  *ngFor = \"let empleado of empleados\" [value]=empleado.id>{{empleado.nombre}}</option>\n        </select>\n         \n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Zona de la tienda</label>\n      <div class=\"col\">\n        <select (change)=\"cargarElementosZona($event.target.value)\" class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_zona\">\n          <option  *ngFor = \"let zona of zonasTienda\" [value]=zona.id>{{zona.nombre}}</option>\n        </select>         \n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Qué parte concretamente</label>\n      <div class=\"col\">\n        <select  class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_elementozona\">\n          <option  *ngFor = \"let elemento of elementosZona\" [value]=elemento.id>{{elemento.description_obj}}</option>\n        </select>         \n      </div>\n    </div>\n\n\n    <div class=\"form-group row align-items-end\">\n      <label class=\"col-2 col-form-label\" value=\"\">Finalizada</label>\n      <div class=\"col\">\n       <label><input type=\"checkbox\" value=\"\" formControlName=\"finalizada\"></label>\n      </div>                                        \n     </div>\n\n<!--\n    <div class=\"form-group row\">\n      <label class=\"col-2 col-form-label\">Zona</label>\n      <div class=\"col\">\n\n        <input class=\"form-control\"\n               type=\"text\"\n               placeholder=\"Zona\"\n               formControlName=\"apellido\"\n               [class.is-invalid]=\"apellidoNoValido\">\n        <small *ngIf=\"apellidoNoValido\" class=\"text-danger\">\n                Ingrese el apellido\n        </small>\n      </div>\n    </div>\n  -->\n\n\n    <!-- prueba error en html  -->\n    <select (change)=\"filterChanged($event.target.value)\">\n      <option *ngFor=\"let type of filterTypes\" [value]=\"type.value\">{{type.display}}\n      </option>\n      </select>\n\n\n  <div class=\"form-group row\">\n    <label class=\"col-2 col-form-label\">&nbsp;</label>\n    <div class=\"input-group col\">\n      <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\n        Guardar\n      </button>\n    </div>\n  </div>  \n\n</form>\n\n<ag-grid-angular \n    style=\"width: 500px; height: 500px;\" \n    class=\"ag-theme-balham\"\n    [rowData]=\"rowData\" \n    [columnDefs]=\"columnDefs\">\n</ag-grid-angular>\n\n\n\n\n\n<hr>\n<pre>\n  Estado del formulario: {{ forma.valid }}\n  <br>\n  Status: {{ forma.status }}\n</pre>\n\n<pre>\n\n  {{ forma.value | json }}\n\n</pre>","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { Empleados } from '../../models/empleados';\nimport { AutocontrolService } from 'src/app/services/autocontrol.service';\nimport {  Router  } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-empleado-form',\n  templateUrl: './empleado-form.component.html',\n  styleUrls: ['./empleado-form.component.css']\n})\nexport class EmpleadoFormComponent implements OnInit {\n\n  @HostBinding('class') classes='row';\n\n  empleado:Empleados = new Empleados();\n\n  edit: boolean = false;\n\n  constructor(private autocontrolService: AutocontrolService, private router : Router, private activedRoute: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    const params = this.activedRoute.snapshot.params;\n    if (params.id) {\n      this.autocontrolService.getEmpleado(params.id)\n        .subscribe(   (res:Empleados) => {\n            console.log(\"NGONINIT \", res);\n            console.log(\"RES \",res);                  \n            //this.game = res;\n            this.empleado = res;\n            console.log(\"THIS.GAME \", this.empleado);\n            this.edit = true;\n          },\n          err => console.error(err)\n        )\n    }    \n  }\n\n  saveNewEmpleado() {\n    // PAAA GUARDARLO LLAMAMOS AL METODO DEL SERVCVIICIO\n    //delete this.game.created_at;\n    //delete this.game.id;\n    console.log('saveNEWgame')\n    this.autocontrolService.saveEmpleado(this.empleado)\n      .subscribe(\n        res => {console.log(\"hola\",res);\n          this.router.navigate(['/empleados'])\n        },\n        err => console.error(\"error\", err)\n      )\n  }\n\n  updateEmpleado() {\n    delete this.empleado.created_at;\n    console.log (' en el update GAME QUE PASA ' , this.empleado)\n    this.autocontrolService.updateEmpleados(this.empleado.id, this.empleado)\n    .subscribe(  \n        res => { console.log(\"guyas\");        \n       }, err => console.error  ('dfdffd')\n    )\n            \n    \n       \n      \n\n  }\n\n}\n","<div class=\"col-md-4 offset-md-2\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"text\" nombre=\"tittle\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" class=\"form-control\" autofocus>                    \n                </div>\n                <div class=\"form-group\">\n                    <textarea nombre=\"nombre\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" rows=\"2\" class=\"form-control\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"url\" nombre=\"image\" [(ngModel)] = \"empleado.image\" placeholder=\"Image\" class=\"form-control\">\n                </div>\n                <button class=\"btn btn-success btn-block\" (click)=\"edit ? updateEmpleado() : saveNewEmpleado()\"> \n                    Save\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- mostrar visualizacion -->\n<div class=\"col-md-4\">\n    <div class=\"card card-body text-center\">\n        <img [src]=\"empleado.image == '' ? '/assets/noimage.png' : empleado.image\" class= \"card-img-top\">\n        <h3>{{empleado.id}}. {{empleado.nombre == '' ? 'Nombre empleado ' : empleado.nombre }}</h3>\n        <p>{{empleado.nombre == '' ? 'whirte your nombre ' : empleado.nombre }} </p>\n        <p>{{empleado.created_at }} | date: 'yyy-MM-dd'</p>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { AutocontrolService } from '../../services/autocontrol.service';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './empleados-list.component.html',\n  styleUrls: ['./empleados-list.component.css']\n})\nexport class EmpleadosListComponent implements OnInit {\n\n  @HostBinding('class') classes = 'row'\n  empleados: any = [];\n  \n\n  constructor(private autocontrolService: AutocontrolService) { }\n\n  ngOnInit() {\n    this.getEmpleados();\n    \n  }\n\n  getEmpleados() {\n    this.autocontrolService.getEmpleados().subscribe(\n      res => {\n        this.empleados = res;\n      },\n      err => console.error(err)\n    );\n\n  }\n\n  deleteEmpleado ( id: string ) {\n    this.autocontrolService.deleteEmpleado(id).subscribe(\n      res => {\n        console.log(res)      \n      },\n      err => console.log(err)\n    )\n  }\n\n\n\n}\n","<div class=\"col-md-4\" *ngFor=\"let empleado of empleados\">\n    <div class=\"card text-center\">\n        <div class= \"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\n            {{empleado.name}}\n            <button class=\"btn btn-danger\" (click)=\"deleteEmpleado(empleado.id)\">\n                <i class=\"far fa-trash-alt\"></i>\n            </button>\n        </div>\n        <img [src]=\"empleado.image\" class=\"card-img-top\">\n        <div class=\"card-body\"> \n            <p>{{empleado.description}}</p>\n            <a [routerLink]=\"['/empleados/edit',empleado.id]\" class=\"btn btn-info btn-block\" >\n                EDIT GAME\n            </a>\n\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n<div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">CRUD DE MYSQL</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ml-auto\">\n\n        <li class=\"nav-item\">\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \n          <a class=\"nav-link\" routerLink=\"/autocontrol\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Autocontrol</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \n          <a class=\"nav-link\" routerLink=\"/games\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Empleados</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/games/add\" routerLinkActive=\"active\"><i class=\"fas fa-plus-circle\"></i> añadir empleados</a>\n        </li>\n     \n       \n      </ul>\n     \n    </div>\n</div>\n  </nav>\n\n  ","export class Empleados {\r\n    id?: number;\r\n    nombre: string;\r\n    apellidos: string;\r\n    image?: string;\r\n    created_at?:Date\r\n}\r\n\r\n","export class Tareas {\r\n    id?: number;\r\n    id_empleado     : number;\r\n    id_zona    : number;\r\n    id_elementozona: number;\r\n    nota?: string;\r\n    finalizada: boolean;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient }from '@angular/common/http';\n\n// con esta interface importada, se puede enviar el envio del uego por saveGame\nimport { Empleados } from '../models/empleados';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutocontrolService {\n\n  API_URI = 'http://localhost:3000/api';\n  constructor( private http: HttpClient ) { }\n\n\n  getEmpleados() {\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\n    return this.http.get(`${this.API_URI}/empleados`);\n\n  }\n\n  getZonas() {\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\n    return this.http.get(`${this.API_URI}/zonas`);\n\n  }\n\n  getEmpleado(id:string) {\n    return this.http.get(`${this.API_URI}/empleado/${id}`);\n  }\n\n  deleteEmpleado(id:string) {\n    return this.http.delete(`${this.API_URI}/empleado/${id}`);\n  }\n\n  saveEmpleado(empleado: Empleados) {\n    console.log(\"SAVE GAME \" , empleado);\n    console.log\n    return this.http.post(`${this.API_URI}/empleado/`, empleado);\n\n  }\n\n  updateEmpleados (id: string|number, updatedEmpleado:Empleados ): Observable<any> {\n     console.log(\"actualizado\", updatedEmpleado)\n       return this.http.put(`${this.API_URI}/empleado/${id}`,updatedEmpleado)\n     \n  }\n\n  getElementosZonaPorzona(id:number) {\n    return this.http.get(`${this.API_URI}/elementosporzona/${id}`);\n  }\n\n  saveTarea(tareas: any) {\n    console.log(\"SAVE TAREA  \" , tareas);\n    \n    return this.http.post(`${this.API_URI}/tareas`, tareas);\n\n  }\n\n  getElementossGrid(){\n    return this.http.get(`${this.API_URI}/tareas`); \n\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\ninterface ErrorValidate {\n  [s:string]: boolean\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidadoresService {\n\n  constructor() { }\n\n  existeUsuario( control: FormControl ): Promise<ErrorValidate> | Observable<ErrorValidate> {\n\n    if( !control.value ) {\n      return Promise.resolve(null);\n    }\n\n    return new Promise( (resolve, reject) => {\n\n      setTimeout(() => {\n        \n        if ( control.value === 'strider' ) {\n          resolve({ existe: true });\n        } else {\n          resolve( null );\n        }\n\n      }, 3500);\n\n\n    });\n\n  }\n\n\n  noHerrera( control: FormControl ): ErrorValidate {\n\n    if ( control.value?.toLowerCase() === 'herrera' ){\n      return {\n        noHerrera: true\n      }\n    }\n\n    return null;\n  }\n\n  passwordsIguales( pass1Name: string, pass2Name: string ) {\n\n    return ( formGroup: FormGroup ) => {\n\n      const pass1Control = formGroup.controls[pass1Name];\n      const pass2Control = formGroup.controls[pass2Name];\n\n      if ( pass1Control.value === pass2Control.value ) {\n        pass2Control.setErrors(null);\n      } else {\n        pass2Control.setErrors({ noEsIgual: true });\n      }\n\n    }\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}