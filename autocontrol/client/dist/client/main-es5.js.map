{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.ts","webpack:///src/app/components/autocontrol-form/autocontrol-form.component.html","webpack:///src/app/components/empleado-form/empleado-form.component.ts","webpack:///src/app/components/empleado-form/empleado-form.component.html","webpack:///src/app/components/empleados-list/empleados-list.component.ts","webpack:///src/app/components/empleados-list/empleados-list.component.html","webpack:///src/app/components/navigation/navigation.component.ts","webpack:///src/app/components/navigation/navigation.component.html","webpack:///src/app/models/empleados.ts","webpack:///src/app/models/tareas.ts","webpack:///src/app/services/autocontrol.service.ts","webpack:///src/app/services/validadores.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withComponents","declarations","providers","bootstrap","AutocontrolFormComponent","fb","validadores","autocontrolservice","empleados","zonasTienda","elementosZona","tareaencurso","tareasrealizadas","rowData","crearFormulario","cargarDataAlFormulario","crearListeners","columnDefs","headerName","field","sortable","getEmpleados","cargarZonas","cargarGrid","forma","group","fecha_tarea","id_empleado","id_zona","id_elementozona","nota","finalizada","get","valueChanges","subscribe","console","log","reset","invalid","Object","values","controls","forEach","control","markAsTouched","JSON","parse","stringify","value","saveTarea","res","err","error","nombre","getZonas","selectedValue","idZona","getElementosZonaPorzona","getElementosGrid","guardar","cargarElementosZona","EmpleadoFormComponent","autocontrolService","router","activedRoute","classes","empleado","edit","params","snapshot","getEmpleado","saveEmpleado","navigate","created_at","updateEmpleados","updateEmpleado","saveNewEmpleado","EmpleadosListComponent","deleteEmpleado","NavigationComponent","Empleados","Tareas","AutocontrolService","http","API_URI","post","updatedEmpleado","put","tareas","providedIn","ValidadoresService","reject","setTimeout","existe","toLowerCase","noHerrera","pass1Name","pass2Name","formGroup","pass1Control","pass2Control","setErrors","noEsIgual","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\r\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\r\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    // como está redireccionando a otro sitio hay que añadir pathMatch y full\r\n    path:'',\r\n    redirectTo: 'games', pathMatch: 'full'\r\n  },\r\n  {\r\n    // cuando viiste la ruta /games se randeriza el componente gamelistcomponents\r\n    path: 'games',  component: EmpleadosListComponent\r\n  },\r\n  {\r\n    path: 'games/add', component: EmpleadoFormComponent\r\n\r\n  },\r\n  {\r\n\r\n    path: 'games/edit/:id', component: EmpleadoFormComponent\r\n\r\n  },\r\n  {\r\n    path: 'autocontrol', component: AutocontrolFormComponent\r\n\r\n  },\r\n  {\r\n    path: 'elementoszona', component: AutocontrolFormComponent\r\n\r\n  }\r\n                                      \r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n\r\n}\r\n","<H1>Cliente de angular</H1>\r\n<app-navigation>\r\n \r\n\r\n</app-navigation>\r\n<div class=\"container p-4\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n// con esto funcionara nuestro sirivio\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { EmpleadoFormComponent } from './components/empleado-form/empleado-form.component';\r\nimport { EmpleadosListComponent } from './components/empleados-list/empleados-list.component';\r\n\r\n// esto vale pasra decirle que esta app tendraa este proveedor\r\nimport { AutocontrolService } from './services/autocontrol.service';\r\nimport { AutocontrolFormComponent } from './components/autocontrol-form/autocontrol-form.component';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\nimport {  MatSelectModule } from '@angular/material/select';\r\n\r\nimport {  MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport {MatInputModule } from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\n\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { NgxFontAwesomeModule } from 'ngx-font-awesome';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    EmpleadoFormComponent,\r\n    EmpleadosListComponent,\r\n    AutocontrolFormComponent\r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    BsDatepickerModule,    \r\n    BrowserAnimationsModule,\r\n    NgxFontAwesomeModule,    \r\n    BsDatepickerModule.forRoot(),\r\n    AgGridModule.withComponents([])\r\n    \r\n    \r\n  \r\n       \r\n \r\n  ],\r\n  providers: [AutocontrolService,\r\n    MatDatepickerModule\r\n             \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ValidadoresService } from '../../services/validadores.service';\r\nimport { AutocontrolService } from '../../services/autocontrol.service';\r\nimport { Tareas } from '../../models/tareas';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-autoncontrol-form',\r\n  templateUrl: './autocontrol-form.component.html',\r\n  styleUrls: ['./autocontrol-form.component.css']\r\n})\r\nexport class AutocontrolFormComponent implements OnInit {\r\n\r\n  forma: FormGroup;\r\n  empleados: any = [];\r\n  zonasTienda: any = [];\r\n  elementosZona: any = [];\r\n  tareaencurso: Tareas = new Tareas();\r\n  tareasrealizadas: any = [];\r\n  gridOptions: GridOptions;\r\n  columnDefs;\r\n   rowData: any = [];\r\n\r\n\r\n \r\n//[\r\n\r\n//  { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\r\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\r\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true },\r\n//    { nombre: 'Toyota', zona: 'Celica', parte: 'xxx' , fianlizada: true }\r\n    \r\n// ];\r\n\r\n\r\n// fin prueba para error\r\n\r\n  constructor( private fb: FormBuilder,\r\n               private validadores: ValidadoresService, private autocontrolservice: AutocontrolService ) { \r\n\r\n    this.crearFormulario();\r\n    this.cargarDataAlFormulario();\r\n   \r\n    this.crearListeners();\r\n\r\n   this.columnDefs = [\r\n      {headerName: 'Fecha', field: 'fecha_tarea',sortable:true},\r\n      {headerName: 'Nombre', field: 'nombre', sortable:true },\r\n      {headerName: 'Zona', field: 'zona' },\r\n      {headerName: 'Parte', field: 'parte'},\r\n      {headerName: 'Finalizada', field: 'finalizada'},\r\n      {headerName: 'nota', field: 'nota'}\r\n  ];\r\n  \r\n \r\n\r\n    \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n     \r\n  \r\n\r\n    this.getEmpleados();\r\n    this.cargarZonas();\r\n    this.cargarGrid();\r\n\r\n\r\n    \r\n  }\r\n\r\n  /*\r\n\r\n  get pasatiempos() {\r\n    return this.forma.get('pasatiempos') as FormArray;\r\n  }\r\n\r\n  get nombreNoValido() {\r\n    return this.forma.get('nombre').invalid && this.forma.get('nombre').touched\r\n  }\r\n\r\n  get apellidoNoValido() {\r\n    return this.forma.get('apellido').invalid && this.forma.get('apellido').touched\r\n  }\r\n\r\n  get correoNoValido() {\r\n    return this.forma.get('correo').invalid && this.forma.get('correo').touched\r\n  }\r\n\r\n  get usuarioNoValido() {\r\n    return this.forma.get('usuario').invalid && this.forma.get('usuario').touched\r\n  }\r\n\r\n  get distritoNoValido() {\r\n    return this.forma.get('direccion.distrito').invalid && this.forma.get('direccion.distrito').touched\r\n  }\r\n\r\n  get ciudadNoValido() {\r\n    return this.forma.get('direccion.ciudad').invalid && this.forma.get('direccion.ciudad').touched\r\n  }\r\n\r\n  get pass1NoValido() {\r\n    return this.forma.get('pass1').invalid && this.forma.get('pass1').touched;\r\n  }\r\n\r\n  get pass2NoValido() {\r\n    const pass1 = this.forma.get('pass1').value;\r\n    const pass2 = this.forma.get('pass2').value;\r\n\r\n    return ( pass1 === pass2 ) ? false : true;\r\n  }\r\n*/\r\n\r\n\r\n  crearFormulario() {\r\n\r\n    this.forma = this.fb.group({\r\n      fecha_tarea: 9,\r\n      id_empleado     : 0,\r\n      id_zona    : 0,\r\n      id_elementozona: 0,\r\n      nota: [''],\r\n      finalizada: false\r\n      /* nombre  : ['', [ Validators.required, Validators.minLength(5) ]  ],\r\n      apellido: ['', [Validators.required, this.validadores.noHerrera ] ],\r\n      correo  : ['', [ Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')] ],\r\n      usuario : ['', , this.validadores.existeUsuario ], */\r\n      /* pass1   : ['', Validators.required ],\r\n      pass2   : ['', Validators.required ],\r\n      direccion: this.fb.group({\r\n        distrito: ['', Validators.required ],\r\n        ciudad  : ['', Validators.required ], \r\n      \r\n      }), \r\n      \r\n      pasatiempos: this.fb.array([])\r\n    },{\r\n      validators: this.validadores.passwordsIguales('pass1','pass2') */\r\n    }); \r\n\r\n  }\r\n\r\n  crearListeners() {\r\n    // this.forma.valueChanges.subscribe( valor => {\r\n    //   console.log(valor);\r\n    // });\r\n\r\n    // this.forma.statusChanges.subscribe( status => console.log({ status }));\r\n    this.forma.get('id_empleado').valueChanges.subscribe( console.log );\r\n  }\r\n\r\n  cargarDataAlFormulario() {\r\n\r\n    // this.forma.setValue({\r\n    this.forma.reset({\r\n      id_empleado     : 0,\r\n      id_zona    : 0,\r\n      nota: [''],\r\n      id_elementozona: 0,      \r\n      finalizada: false\r\n    });\r\n\r\n  }\r\n\r\n/*\r\n\r\n  agregarPasatiempo() {\r\n    this.pasatiempos.push(  this.fb.control('')  );\r\n  }\r\n  \r\n  borrarPasatiempo(i: number) {\r\n    this.pasatiempos.removeAt(i);\r\n  }\r\n\r\n*/\r\n  guardar() {\r\n    console.log(  \"VALOR DE FORMA EN GUARDAR() \" ,this.forma );                                                                                                                                         \r\n     \r\n    if ( this.forma.invalid ) {\r\n\r\n\r\n      return Object.values( this.forma.controls ).forEach( control => {\r\n        \r\n        if ( control instanceof FormGroup ) {\r\n          Object.values( control.controls ).forEach( control => control.markAsTouched() );\r\n        } else {\r\n          control.markAsTouched();\r\n        }\r\n        \r\n        \r\n      })\r\n         \r\n    }\r\n    this.tareaencurso = JSON.parse(JSON.stringify(this.forma.value))\r\n   \r\n    this.autocontrolservice.saveTarea(this.tareaencurso).subscribe(\r\n      res => {\r\n        //this.empleados = res;\r\n        console.log(\"ESTSOS SON LOS EMPLEADOS: \", res )\r\n        this.cargarGrid();\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )\r\n\r\n    // Posteo de información\r\n    this.forma.reset({\r\n      nombre: 'Sin nombre'\r\n    });\r\n\r\n  }\r\n\r\n  getEmpleados(){\r\n    this.autocontrolservice.getEmpleados().subscribe(\r\n      res => {\r\n        this.empleados = res;\r\n        console.log(res)\r\n        \r\n      },\r\n\r\n      err => console.error(err)\r\n  )}\r\n\r\n  cargarZonas(){\r\n    this.autocontrolservice.getZonas().subscribe(\r\n      res => {\r\n        this.zonasTienda = res;\r\n        console.log(this.zonasTienda  )\r\n        \r\n        \r\n      },\r\n      err => console.error(err)\r\n  )}\r\n\r\n  cargarElementosZona(selectedValue: number){\r\n    const idZona = this.forma.get('id_zona').value\r\n    console.log('cargarELEMENTOSzonas variable idzona ',idZona)\r\n    if (idZona != null) {    \r\n      this.autocontrolservice.getElementosZonaPorzona(idZona).subscribe(\r\n        res => {\r\n          this.elementosZona = res;\r\n          console.log(this.elementosZona )\r\n        },\r\n        err => console.error(err)           \r\n      )}\r\n  }\r\n \r\n  // metodo creado para probar error\r\n  filterChanged(selectedValue:string){\r\n    console.log('value is ',selectedValue);\r\n \r\n  }\r\n\r\n  cargarGrid(){\r\n    this.autocontrolservice.getElementosGrid().subscribe(\r\n      res => {\r\n        this.tareasrealizadas = res;\r\n      \r\n        this.rowData = res\r\n       \r\n        console.log(\"tareas \", this.tareasrealizadas )\r\n      },\r\n      err => console.error(\"dea error\", err)           \r\n    )}\r\n\r\n\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n","<h4>Formularios <small> Reactivos </small></h4>\r\n<hr>\r\n<form autocomplete=\"off\" [formGroup]=\"forma\" (ngSubmit)=\"guardar()\">\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">Fecha</label>\r\n    <div class=\"col example-full-width\">\r\n      <input matInput [matDatepicker]=\"picker\" class=\"form-control\" placeholder=\"Fecha\"  formControlName=\"fecha_tarea\">\r\n      <mat-datepicker #picker></mat-datepicker>\r\n      <button mat-raised-button (click)=\"picker.open()\">Open</button>\r\n       \r\n    \r\n       \r\n    </div>\r\n  </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Nombre</label>\r\n      <div class=\"col\">\r\n        <select class=\"form-control\" placeholder=\"Nombre\"  formControlName=\"id_empleado\">\r\n          <option  *ngFor = \"let empleado of empleados\" [value]=empleado.id>{{empleado.nombre}}</option>\r\n        </select>\r\n         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Zona de la tienda</label>\r\n      <div class=\"col\">\r\n        <select (change)=\"cargarElementosZona($event.target.value)\" class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_zona\">\r\n          <option  *ngFor = \"let zona of zonasTienda\" [value]=zona.id>{{zona.nombre}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Qué parte concretamente</label>\r\n      <div class=\"col\">\r\n        <select  class=\"form-control\" placeholder=\"Zona\"  formControlName=\"id_elementozona\">\r\n          <option  *ngFor = \"let elemento of elementosZona\" [value]=elemento.id>{{elemento.description_obj}}</option>\r\n        </select>         \r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row align-items-end\">\r\n      <label class=\"col-2 col-form-label\" value=\"\">Finalizada</label>\r\n      <div class=\"col\">\r\n       <label><input type=\"checkbox\" value=\"\" formControlName=\"finalizada\"></label>\r\n      </div>                                        \r\n     </div>\r\n\r\n<!--\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-2 col-form-label\">Zona</label>\r\n      <div class=\"col\">\r\n\r\n        <input class=\"form-control\"\r\n               type=\"text\"\r\n               placeholder=\"Zona\"\r\n               formControlName=\"apellido\"\r\n               [class.is-invalid]=\"apellidoNoValido\">\r\n        <small *ngIf=\"apellidoNoValido\" class=\"text-danger\">\r\n                Ingrese el apellido\r\n        </small>\r\n      </div>\r\n    </div>\r\n  -->\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-2 col-form-label\">&nbsp;</label>\r\n    <div class=\"input-group col\">\r\n      <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </div>  \r\n\r\n</form>\r\n\r\n<ag-grid-angular \r\n    style=\"width: 1024px; height: 500px;\" \r\n    class=\"ag-theme-balham\"\r\n    [rowData]=\"rowData\" \r\n    [columnDefs]=\"columnDefs\">\r\n</ag-grid-angular>\r\n\r\n\r\n\r\n\r\n\r\n<hr>\r\n<pre>\r\n  Estado del formulario: {{ forma.valid }}\r\n  <br>\r\n  Status: {{ forma.status }}\r\n</pre>\r\n\r\n<pre>\r\n\r\n  {{ forma.value | json }}\r\n\r\n</pre>","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Empleados } from '../../models/empleados';\r\nimport { AutocontrolService } from 'src/app/services/autocontrol.service';\r\nimport {  Router  } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-empleado-form',\r\n  templateUrl: './empleado-form.component.html',\r\n  styleUrls: ['./empleado-form.component.css']\r\n})\r\nexport class EmpleadoFormComponent implements OnInit {\r\n\r\n  @HostBinding('class') classes='row';\r\n\r\n  empleado:Empleados = new Empleados();\r\n\r\n  edit: boolean = false;\r\n\r\n  constructor(private autocontrolService: AutocontrolService, private router : Router, private activedRoute: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const params = this.activedRoute.snapshot.params;\r\n    if (params.id) {\r\n      this.autocontrolService.getEmpleado(params.id)\r\n        .subscribe(   (res:Empleados) => {\r\n            console.log(\"NGONINIT \", res);\r\n            console.log(\"RES \",res);                  \r\n            //this.game = res;\r\n            this.empleado = res;\r\n            console.log(\"THIS.GAME \", this.empleado);\r\n            this.edit = true;\r\n          },\r\n          err => console.error(err)\r\n        )\r\n    }    \r\n  }\r\n\r\n  saveNewEmpleado() {\r\n    // PAAA GUARDARLO LLAMAMOS AL METODO DEL SERVCVIICIO\r\n    //delete this.game.created_at;\r\n    //delete this.game.id;\r\n    console.log('saveNEWgame')\r\n    this.autocontrolService.saveEmpleado(this.empleado)\r\n      .subscribe(\r\n        res => {console.log(\"hola\",res);\r\n          this.router.navigate(['/empleados'])\r\n        },\r\n        err => console.error(\"error\", err)\r\n      )\r\n  }\r\n\r\n  updateEmpleado() {\r\n    delete this.empleado.created_at;\r\n    console.log (' en el update GAME QUE PASA ' , this.empleado)\r\n    this.autocontrolService.updateEmpleados(this.empleado.id, this.empleado)\r\n    .subscribe(  \r\n        res => { console.log(\"guyas\");        \r\n       }, err => console.error  ('dfdffd')\r\n    )\r\n            \r\n    \r\n       \r\n      \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-4 offset-md-2\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <form>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" nombre=\"tittle\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" class=\"form-control\" autofocus>                    \r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea nombre=\"nombre\" [(ngModel)] = \"empleado.nombre\" placeholder=\"nombre\" rows=\"2\" class=\"form-control\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"url\" nombre=\"image\" [(ngModel)] = \"empleado.image\" placeholder=\"Image\" class=\"form-control\">\r\n                </div>\r\n                <button class=\"btn btn-success btn-block\" (click)=\"edit ? updateEmpleado() : saveNewEmpleado()\"> \r\n                    Save\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- mostrar visualizacion -->\r\n<div class=\"col-md-4\">\r\n    <div class=\"card card-body text-center\">\r\n        <img [src]=\"empleado.image == '' ? '/assets/noimage.png' : empleado.image\" class= \"card-img-top\">\r\n        <h3>{{empleado.id}}. {{empleado.nombre == '' ? 'Nombre empleado ' : empleado.nombre }}</h3>\r\n        <p>{{empleado.nombre == '' ? 'whirte your nombre ' : empleado.nombre }} </p>\r\n        <p>{{empleado.created_at }} | date: 'yyy-MM-dd'</p>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { AutocontrolService } from '../../services/autocontrol.service';\r\n\r\n@Component({\r\n  selector: 'app-game-list',\r\n  templateUrl: './empleados-list.component.html',\r\n  styleUrls: ['./empleados-list.component.css']\r\n})\r\nexport class EmpleadosListComponent implements OnInit {\r\n\r\n  @HostBinding('class') classes = 'row'\r\n  empleados: any = [];\r\n  \r\n\r\n  constructor(private autocontrolService: AutocontrolService) { }\r\n\r\n  ngOnInit() {\r\n    this.getEmpleados();\r\n    \r\n  }\r\n\r\n  getEmpleados() {\r\n    this.autocontrolService.getEmpleados().subscribe(\r\n      res => {\r\n        this.empleados = res;\r\n      },\r\n      err => console.error(err)\r\n    );\r\n\r\n  }\r\n\r\n  deleteEmpleado ( id: string ) {\r\n    this.autocontrolService.deleteEmpleado(id).subscribe(\r\n      res => {\r\n        console.log(res)      \r\n      },\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"col-md-4\" *ngFor=\"let empleado of empleados\">\r\n    <div class=\"card text-center\">\r\n        <div class= \"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\r\n            {{empleado.name}}\r\n            <button class=\"btn btn-danger\" (click)=\"deleteEmpleado(empleado.id)\">\r\n                <i class=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n        <img [src]=\"empleado.image\" class=\"card-img-top\">\r\n        <div class=\"card-body\"> \r\n            <p>{{empleado.description}}</p>\r\n            <a [routerLink]=\"['/empleados/edit',empleado.id]\" class=\"btn btn-info btn-block\" >\r\n                EDIT GAME\r\n            </a>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">CRUD DE MYSQL</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n\r\n        <li class=\"nav-item\">\r\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \r\n          <a class=\"nav-link\" routerLink=\"/autocontrol\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Autocontrol</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <!-- cuando este activo se coloca la clase active que viene de bootstrap  -->          \r\n          <a class=\"nav-link\" routerLink=\"/games\" routerLinkActive=\"active\"><i class=\"fas fa-gamepad\"></i> Empleados</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/games/add\" routerLinkActive=\"active\"><i class=\"fas fa-plus-circle\"></i> añadir empleados</a>\r\n        </li>\r\n     \r\n       \r\n      </ul>\r\n     \r\n    </div>\r\n</div>\r\n  </nav>\r\n\r\n  ","export class Empleados {\r\n    id?: number;\r\n    nombre: string;\r\n    apellidos: string;\r\n    image?: string;\r\n    created_at?:Date\r\n}\r\n\r\n","export class Tareas {\r\n    id?: number;\r\n    id_empleado     : number;\r\n    id_zona    : number;\r\n    id_elementozona: number;\r\n    nota?: string;\r\n    finalizada: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient }from '@angular/common/http';\r\n\r\n// con esta interface importada, se puede enviar el envio del uego por saveGame\r\nimport { Empleados } from '../models/empleados';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AutocontrolService {\r\n\r\n  API_URI = 'http://localhost:3000/api';\r\n  constructor( private http: HttpClient ) { }\r\n\r\n\r\n  getEmpleados() {\r\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\r\n    return this.http.get(`${this.API_URI}/empleados`);\r\n\r\n  }\r\n\r\n  getZonas() {\r\n    // para no colocar directamente la direction se utiliza una propiedad API_URI\r\n    return this.http.get(`${this.API_URI}/zonas`);\r\n\r\n  }\r\n\r\n  getEmpleado(id:string) {\r\n    return this.http.get(`${this.API_URI}/empleado/${id}`);\r\n  }\r\n\r\n  deleteEmpleado(id:string) {\r\n    return this.http.delete(`${this.API_URI}/empleado/${id}`);\r\n  }\r\n\r\n  saveEmpleado(empleado: Empleados) {\r\n    console.log(\"SAVE GAME \" , empleado);\r\n    console.log\r\n    return this.http.post(`${this.API_URI}/empleado/`, empleado);\r\n\r\n  }\r\n\r\n  updateEmpleados (id: string|number, updatedEmpleado:Empleados ): Observable<any> {\r\n     console.log(\"actualizado\", updatedEmpleado)\r\n       return this.http.put(`${this.API_URI}/empleado/${id}`,updatedEmpleado)\r\n     \r\n  }\r\n\r\n  getElementosZonaPorzona(id:number) {\r\n    return this.http.get(`${this.API_URI}/elementosporzona/${id}`);\r\n  }\r\n\r\n  saveTarea(tareas: any) {\r\n    console.log(\"SAVE TAREA  \" , tareas);\r\n    \r\n    return this.http.post(`${this.API_URI}/tareas`, tareas);\r\n\r\n  }\r\n\r\n  getElementosGrid(){\r\n    return this.http.get(`${this.API_URI}/tareas`); \r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface ErrorValidate {\r\n  [s:string]: boolean\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidadoresService {\r\n\r\n  constructor() { }\r\n\r\n  existeUsuario( control: FormControl ): Promise<ErrorValidate> | Observable<ErrorValidate> {\r\n\r\n    if( !control.value ) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      setTimeout(() => {\r\n        \r\n        if ( control.value === 'strider' ) {\r\n          resolve({ existe: true });\r\n        } else {\r\n          resolve( null );\r\n        }\r\n\r\n      }, 3500);\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  noHerrera( control: FormControl ): ErrorValidate {\r\n\r\n    if ( control.value?.toLowerCase() === 'herrera' ){\r\n      return {\r\n        noHerrera: true\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  passwordsIguales( pass1Name: string, pass2Name: string ) {\r\n\r\n    return ( formGroup: FormGroup ) => {\r\n\r\n      const pass1Control = formGroup.controls[pass1Name];\r\n      const pass2Control = formGroup.controls[pass2Name];\r\n\r\n      if ( pass1Control.value === pass2Control.value ) {\r\n        pass2Control.setErrors(null);\r\n      } else {\r\n        pass2Control.setErrors({ noEsIgual: true });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}